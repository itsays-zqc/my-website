"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[299],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>f});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),m=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=m(e.components);return n.createElement(o.Provider,{value:t},e.children)},s="mdxType",_={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),s=m(a),k=r,f=s["".concat(o,".").concat(k)]||s[k]||_[k]||l;return a?n.createElement(f,i(i({ref:t},d),{},{components:a})):n.createElement(f,i({ref:t},d))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=k;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[s]="string"==typeof e?e:r,i[1]=p;for(var m=2;m<l;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},3708:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>_,frontMatter:()=>l,metadata:()=>p,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const l={},i="PD",p={unversionedId:"examples/Active_Device/index",id:"examples/Active_Device/index",title:"PD",description:"This example introduces the modeling and optoelectronic simulation of a vertical Ge-Si photodetector.",source:"@site/docs/examples/Active_Device/index.md",sourceDirName:"examples/Active_Device",slug:"/examples/Active_Device/",permalink:"/my-website/docs/examples/Active_Device/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/examples/Active_Device/index.md",tags:[],version:"current",frontMatter:{},sidebar:"examplesSidebar",previous:{title:"Modulator",permalink:"/my-website/docs/examples/Active_Device/MOD/"},next:{title:"Lasers",permalink:"/my-website/docs/category/lasers"}},o={},m=[{value:"1. Overview",id:"1-overview",level:2},{value:"2. Modeling",id:"2-modeling",level:2},{value:"2.1 Import simulation toolkit",id:"21-import-simulation-toolkit",level:3},{value:"2.2 Set general parameters",id:"22-set-general-parameters",level:3},{value:"2.3 Define the function for creating a new project",id:"23-define-the-function-for-creating-a-new-project",level:3},{value:"2.3.1 Create a new project",id:"231-create-a-new-project",level:4},{value:"2.3.2 Set materials",id:"232-set-materials",level:4},{value:"2.3.3 Create structures",id:"233-create-structures",level:4},{value:"2.3.4 Add doping",id:"234-add-doping",level:4},{value:"2.3.5 Add surface recombination",id:"235-add-surface-recombination",level:4},{value:"2.3.6 Set waveform",id:"236-set-waveform",level:4},{value:"2.3.7 Set boundary conditions of optical simulation",id:"237-set-boundary-conditions-of-optical-simulation",level:4},{value:"2.3.8 Set local mesh",id:"238-set-local-mesh",level:4},{value:"2.3.9 Set optical sources",id:"239-set-optical-sources",level:4},{value:"2.3.10 Set monitors",id:"2310-set-monitors",level:4},{value:"2.3.11 Preview the structures",id:"2311-preview-the-structures",level:4},{value:"2.3.11.1 Define the preview function",id:"23111-define-the-preview-function",level:5},{value:"2.3.11.2 Add solvers",id:"23112-add-solvers",level:5},{value:"2.3.11.3 Preview doping profile",id:"23113-preview-doping-profile",level:5},{value:"2.3.11.4 Preview index profile",id:"23114-preview-index-profile",level:5},{value:"3. Simulation",id:"3-simulation",level:2},{value:"3.1 Dark current",id:"31-dark-current",level:3},{value:"3.1.1 Import simulation toolkit",id:"311-import-simulation-toolkit",level:4},{value:"3.1.2 Set general parameters",id:"312-set-general-parameters",level:4},{value:"3.1.3 Create a new project",id:"313-create-a-new-project",level:4},{value:"3.1.4 Add electrodes",id:"314-add-electrodes",level:4},{value:"3.1.5 Add the solver",id:"315-add-the-solver",level:4},{value:"3.1.6 Run the solver",id:"316-run-the-solver",level:4},{value:"3.1.7 Extract the result",id:"317-extract-the-result",level:4},{value:"3.1.8 Print the simulation time",id:"318-print-the-simulation-time",level:4},{value:"3.2 Resistance",id:"32-resistance",level:3},{value:"3.2.1 Simulate and extract the I-V curve",id:"321-simulate-and-extract-the-i-v-curve",level:4},{value:"3.2.2 Fit V-I curve to obtain resistance",id:"322-fit-v-i-curve-to-obtain-resistance",level:4},{value:"3.2.2.1 Read the saved I-V data",id:"3221-read-the-saved-i-v-data",level:5},{value:"3.2.2.2 Fit the data to obtain resistance",id:"3222-fit-the-data-to-obtain-resistance",level:5},{value:"3.2.2.3 Save data and plots",id:"3223-save-data-and-plots",level:5},{value:"3.3 Capacitance",id:"33-capacitance",level:3},{value:"3.4 Optical generation rate",id:"34-optical-generation-rate",level:3},{value:"3.4.1 Import simulation toolkit",id:"341-import-simulation-toolkit",level:4},{value:"3.4.2 Set general parameters",id:"342-set-general-parameters",level:4},{value:"3.4.3 Create a new project",id:"343-create-a-new-project",level:4},{value:"3.4.4 Add the solver",id:"344-add-the-solver",level:4},{value:"3.4.5 Simulate and extract the result",id:"345-simulate-and-extract-the-result",level:4},{value:"3.5 Photo current",id:"35-photo-current",level:3},{value:"3.5.1 Import simulation toolkit",id:"351-import-simulation-toolkit",level:4},{value:"3.5.2 Set general parameters",id:"352-set-general-parameters",level:4},{value:"3.5.3 Create a new project",id:"353-create-a-new-project",level:4},{value:"3.5.4 Add electrodes",id:"354-add-electrodes",level:4},{value:"3.5.5 \u6dfb\u52a0\u6c42\u89e3\u5668",id:"355-\u6dfb\u52a0\u6c42\u89e3\u5668",level:4},{value:"3.5.6 \u8fd0\u884c\u5e76\u63d0\u53d6\u7ed3\u679c",id:"356-\u8fd0\u884c\u5e76\u63d0\u53d6\u7ed3\u679c",level:4},{value:"3.6 Bandwidth",id:"36-bandwidth",level:3},{value:"3.6.1 \u5bfc\u5165\u4eff\u771f\u5de5\u5177\u5305",id:"361-\u5bfc\u5165\u4eff\u771f\u5de5\u5177\u5305",level:4},{value:"3.6.2 \u8bbe\u7f6e\u901a\u7528\u53c2\u6570",id:"362-\u8bbe\u7f6e\u901a\u7528\u53c2\u6570",level:4},{value:"3.6.3 \u521b\u5efa\u4eff\u771f\u5de5\u7a0b",id:"363-\u521b\u5efa\u4eff\u771f\u5de5\u7a0b",level:4},{value:"3.6.4 \u6dfb\u52a0\u7535\u6781",id:"364-\u6dfb\u52a0\u7535\u6781",level:4},{value:"3.6.5 \u6dfb\u52a0\u6c42\u89e3\u5668",id:"365-\u6dfb\u52a0\u6c42\u89e3\u5668",level:4},{value:"3.6.6 \u8fd0\u884c\u6c42\u89e3\u5668",id:"366-\u8fd0\u884c\u6c42\u89e3\u5668",level:4},{value:"3.6.7 \u7ed3\u679c\u63d0\u53d6",id:"367-\u7ed3\u679c\u63d0\u53d6",level:4},{value:"3.6.8 \u540e\u5904\u7406",id:"368-\u540e\u5904\u7406",level:4},{value:"\u83b7\u5f97\u8109\u51b2\u54cd\u5e94",id:"\u83b7\u5f97\u8109\u51b2\u54cd\u5e94",level:5},{value:"\u8f93\u51fa\u8109\u51b2\u54cd\u5e94\u7ed3\u679c",id:"\u8f93\u51fa\u8109\u51b2\u54cd\u5e94\u7ed3\u679c",level:5},{value:"\u83b7\u5f97\u9891\u7387\u54cd\u5e94",id:"\u83b7\u5f97\u9891\u7387\u54cd\u5e94",level:5},{value:"\u8f93\u51fa\u9891\u7387\u54cd\u5e94\u7ed3\u679c",id:"\u8f93\u51fa\u9891\u7387\u54cd\u5e94\u7ed3\u679c",level:5},{value:"3.7 Saturation Power",id:"37-saturation-power",level:3},{value:"3.7.1 \u5bfc\u5165\u4eff\u771f\u5de5\u5177\u5305",id:"371-\u5bfc\u5165\u4eff\u771f\u5de5\u5177\u5305",level:4},{value:"3.7.2 \u8bbe\u7f6e\u901a\u7528\u53c2\u6570",id:"372-\u8bbe\u7f6e\u901a\u7528\u53c2\u6570",level:4},{value:"3.7.3 \u5b9a\u4e49\u626b\u63cf\u51fd\u6570",id:"373-\u5b9a\u4e49\u626b\u63cf\u51fd\u6570",level:4},{value:"3.7.4 \u8bbe\u7f6e\u626b\u63cf\u53c2\u6570",id:"374-\u8bbe\u7f6e\u626b\u63cf\u53c2\u6570",level:4},{value:"3.7.5 \u521b\u5efa\u4eff\u771f\u5de5\u7a0b",id:"375-\u521b\u5efa\u4eff\u771f\u5de5\u7a0b",level:4},{value:"3.7.6 \u6dfb\u52a0\u70b9\u51fb",id:"376-\u6dfb\u52a0\u70b9\u51fb",level:4},{value:"3.7.7 \u6dfb\u52a0\u6c42\u89e3\u5668",id:"377-\u6dfb\u52a0\u6c42\u89e3\u5668",level:4},{value:"3.7.8 \u8fd0\u884c\u6c42\u89e3\u5668",id:"378-\u8fd0\u884c\u6c42\u89e3\u5668",level:3},{value:"3.7.9 \u8fd4\u56de\u7535\u6d41\u7ed3\u679c",id:"379-\u8fd4\u56de\u7535\u6d41\u7ed3\u679c",level:4},{value:"3.7.10 \u8fd0\u884c\u626b\u63cf\u51fd\u6570\u5e76\u8f93\u51fa\u7ed3\u679c",id:"3710-\u8fd0\u884c\u626b\u63cf\u51fd\u6570\u5e76\u8f93\u51fa\u7ed3\u679c",level:4},{value:"4.1 \u7535\u5b66\u6750\u6599\u53c2\u6570",id:"41-\u7535\u5b66\u6750\u6599\u53c2\u6570",level:2},{value:"4.2 OEDevice\u8bbe\u7f6e",id:"42-oedevice\u8bbe\u7f6e",level:2}],d={toc:m},s="wrapper";function _(e){let{components:t,...l}=e;return(0,r.kt)(s,(0,n.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"pd"},"PD"),(0,r.kt)("p",null,"This example introduces the modeling and optoelectronic simulation of a vertical Ge-Si photodetector."),(0,r.kt)("h2",{id:"1-overview"},"1. Overview"),(0,r.kt)("p",null,"This example utilizes FDTD simulation to obtain the optical field profile in the Ge absorption layer. Subsequently, the photo-induced carrier generation rate is calculated based on that, which is then imported into the OEDevice simulation to obtain the photo current. We also provide scripts for dark current, capacitance and resistance, frequency response, and saturation power. These simulations are divided into separate scripts, and they all call a unified script for modeling and material setup, making it convenient for modifications and management."),(0,r.kt)("h2",{id:"2-modeling"},"2. Modeling"),(0,r.kt)("p",null,"The modeling is completed by a callable function in the script file ",(0,r.kt)("inlineCode",{parentName:"p"},"VPD00_structure.py"),"."),(0,r.kt)("h3",{id:"21-import-simulation-toolkit"},"2.1 Import simulation toolkit"),(0,r.kt)("p",null,"First, import ",(0,r.kt)("inlineCode",{parentName:"p"},"maxoptics_sdk")," and other packages."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[1]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import maxoptics_sdk.all as mo\nimport os\nimport time\nfrom maxoptics_sdk.helper import timed\nfrom pathlib import Path\nfrom VPD_material import *\n")),(0,r.kt)("p",null,"The script file ",(0,r.kt)("inlineCode",{parentName:"p"},"VPD_material.py")," stores some modified electronic parameters of the materials, which are referenced to override default parameters in the modeling script."),(0,r.kt)("h3",{id:"22-set-general-parameters"},"2.2 Set general parameters"),(0,r.kt)("p",null,"Set some general parameters before modeling. At the beginning are those that need to be modified frequently during testing and optimization."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[2]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# region --- 0. General Parameters ---\nwavelength_center = 1.55    # um\nwavelength_span = 0.1   # um\nsource_fraction = 0.001\ntemperature = 298.15    # K\nnormal_length = 20  # um\negrid_local = 0.1  # um egrid_global is not supported so far\negrid_genrate = 0.02 # um\negrid_interface = 0.002 # um\nremesh_thickness = 0.004 # um\nomesh_grid_Ge = 0.02 # um\nomesh_grid_Si = 0.025    # um\ncells_per_wavelength = 14\nGe_SiO2_recombination_velocity = 225000    # cm/s\nrun_mode = "local"\nsimu_name = "VPD00_struc"\n')),(0,r.kt)("p",null,"Wavelength, temperature, the mesh grid size and some other parameters are defined above. They will be detailed in the subsequent settings."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[3]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# --- structure geometry ---\nSiO2_x_center = 0\nSiO2_x_span = 100\nSiO2_y_center = 0\nSiO2_y_span = 20\nSiO2_z_center = 0\nSiO2_z_span = 10\n\ninput_wg_x_center = -42.5\ninput_wg_length = 5\ninput_wg_width = 0.5\nSi_z_span = 0.22\nSi_y_center = 0\ntaper_x_min = input_wg_x_center+input_wg_length/2\ntaper_length = 40\ntaper_width = 4\n\nSi_slab_length = 22\nSi_slab_x_center = taper_x_min+taper_length+Si_slab_length/2\nSi_slab_width = 20\n\nGe_x_center = 10.75\nGe_x_span_bottom = 20\nGe_x_span_top = 19.5\nGe_y_span_bottom = 4\nGe_y_span_top = 3\nGe_z_span = 0.5\nGe_z_center = Si_z_span+Ge_z_span/2\n\nanode_x_center = 10.75\nanode_x_span = 19\nanode_y_center = 3.7\nanode_y_span_top = 2\nanode_y_span_bottom = 2\nanode_z_span = 1.37\nanode_z_center = Si_z_span+anode_z_span/2\n\ncathode_x_center = 10.75\ncathode_x_span = 19\ncathode_y_center = 0\ncathode_y_span_top = 2.2\ncathode_y_span_bottom = 2.2\ncathode_z_span = 1\ncathode_z_center = Si_z_span+Ge_z_span+cathode_z_span/2\n")),(0,r.kt)("p",null,"These are geometric parameters of the structures."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[4]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-pyton"},"# --- electrical simulation boundary ---\noe_x_min = 10\noe_x_max = 10\noe_x_mean = 0.5*(oe_x_min+oe_x_max)\noe_x_span = oe_x_max-oe_x_min\n\noe_y_min = 0\noe_y_max = 3.7\noe_y_mean = 0.5*(oe_y_min+oe_y_max)\noe_y_span = oe_y_max-oe_y_min\n\noe_z_min = -0.15\noe_z_max = 1.25\noe_z_mean = 0.5*(oe_z_min+oe_z_max)\noe_z_span = oe_z_max-oe_z_min\n")),(0,r.kt)("p",null,"These are geometric parameters of the electrical simulation region."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[5]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# --- doping parameters ---\np_uniform_x_center = 10.75\np_uniform_x_span = 22.5\np_uniform_y_center = 0\np_uniform_y_span = 15\np_uniform_z_center = Si_z_span/2\np_uniform_z_span = Si_z_span\np_uniform_con = 1e15\n\np_well_x_center = 10.75\np_well_x_span = 22.5\np_well_y_center = 0\np_well_y_span = 15\np_well_z_center = -0.035\np_well_z_span = 0.53\np_well_junction_width = 0.05\np_well_con = 7e18\n\np_pplus_x_center = 10.75\np_pplus_x_span = 22.5\np_pplus_y_center = 4.75\np_pplus_y_span = 4.5\np_pplus_z_center = 0.1675\np_pplus_z_span = 0.115\np_pplus_junction_width = 0.2\np_pplus_con = 3e19\n\nn_pplus_x_center = 10.75\nn_pplus_x_span = 19.7\nn_pplus_y_center = 0\nn_pplus_y_span = 3\nn_pplus_z_center = 0.72\nn_pplus_z_span = 0.02\nn_pplus_junction_width = 0.02\nn_pplus_con = 1e20\nn_pplus_ref = 1e16\n")),(0,r.kt)("p",null,"These are parameters for doping setup, including doping box, concentration and the diffusion junction width."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[6]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# --- optical simulation boundary  ---\nx_min = -43  # light direction\nx_max = 21\nx_mean = 0.5*(x_min+x_max)\nx_span = x_max-x_min\n\ny_min = -3.2  # lateral\ny_max = 3.2\ny_mean = 0.5*(y_min+y_max)\ny_span = y_max-y_min\n\nz_min = -0.5  # vertical\nz_max = 1\nz_mean = 0.5*(z_min+z_max)\nz_span = z_max-z_min\n# endregion\n")),(0,r.kt)("p",null,"These are geometry parameters for the optical simulation region."),(0,r.kt)("h3",{id:"23-define-the-function-for-creating-a-new-project"},"2.3 Define the function for creating a new project"),(0,r.kt)("p",null,"A function is defined to implement the functionalities of creating a project, setting materials, modeling, doping, setting boundary conditions, etc., which can be called by other simulation script files."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[7]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def pd_project(project_name, run_mode, material_property):\n")),(0,r.kt)("h4",{id:"231-create-a-new-project"},"2.3.1 Create a new project"),(0,r.kt)("p",null,"Create a new simulation project."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[8]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"    # region --- 1. Project ---\n    pj = mo.Project(name=project_name, location=run_mode)\n    # endregion\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"mo.Project()")," parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),"--Project name, which is also the folder name for the project files to be saved."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"location"),"--The location of the computing resources. The active device simulation only support the option of ",(0,r.kt)("inlineCode",{parentName:"li"},'"local"')," now, which means the simulation uses the local computing resources.")),(0,r.kt)("h4",{id:"232-set-materials"},"2.3.2 Set materials"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[9]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    # region --- 2. Material ---\n    if material_property == "normal":\n        si_override = elec_Si_properties\n        ge_override = elec_Ge_properties\n\n    elif material_property == "transient":\n        si_override = elec_Si_properties\n        ge_override = elec_Ge_properties_for_transient\n    else:\n        print("material_property must be chosen from \'normal\', \'transient\'")\n        raise\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"elec_Si_properties")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"elec_Ge_properties")," are both variables imported from ",(0,r.kt)("inlineCode",{parentName:"p"},"VPD_material.py"),", storing the modified electronic parameters for Silicon and Germanium respectively. Besides, more physics models for Germanium are switched on in the transient simulation, with the ",(0,r.kt)("inlineCode",{parentName:"p"},"elec_Ge_properties_for_transient")," specified for it. The ",(0,r.kt)("inlineCode",{parentName:"p"},"material_property")," is used to determine which type of material parameters to choose. For details of the physics model and electronic parameter settings, please refer to the appendix."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[10]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    mt = pj.Material()\n    mt.add_lib(name="mat_sio2", data=mo.OE_Material.SiO2, order=1)\n    mt.add_lib(name="mat_air", data=mo.OE_Material.Air, order=1)\n    mt.add_lib(name="pec", data=mo.OE_Material.Al, order=2, override={\n               "basic": {"model": "Default", "Default": {"affinity": 4.28}, "print": 1}})\n    mt.add_lib(name="mat_si", data=mo.OE_Material.Si,\n               order=2, override=si_override)\n    mt.add_lib(name="mat_ge", data=mo.OE_Material.Ge,\n               order=2, override=ge_override)\n\n    mt["mat_sio2"].set_optical_material(data=mo.Material.SiO2_Palik)\n    mt["mat_air"].set_optical_material(data=mo.Material.Air)\n    mt["pec"].set_optical_material(data=mo.Material.PEC)\n    mt["mat_si"].set_optical_material(data=mo.Material.Si_Palik)\n    mt["mat_ge"].set_optical_material(data=mo.Material.Ge_Palik)\n    # endregion\n')),(0,r.kt)("p",null,"When adding materials, start by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"add_lib")," function to add electrical materials from the material library."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"add_lib()")," parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),"--Custom material name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data"),"--Material data, requiring one of the built-in materials in the electrical material library, namely ",(0,r.kt)("inlineCode",{parentName:"li"},"mo.OE_Material")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"order"),"--",(0,r.kt)("inlineCode",{parentName:"li"},"mesh_order")," of the material, default to be 2"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"override"),"--Override the default electronic parameters by custom values")),(0,r.kt)("p",null,"Then, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"set_optical_material")," function to set the optical property for the material."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"set_optical_material()")," parameters\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data"),"--Optical material property\uff0cwhich can be one of the built-in materials in the optical material library ",(0,r.kt)("inlineCode",{parentName:"li"},"mo.Material"),", or be from the custom optical material.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Example of using custom optical material properties")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[11]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'mt.add_lib(name="mat_sio2", data=mo.OE_Material.SiO2, order=1)\nmt.add_nondispersion(name="mat_sio2_op", data=[(1.444, 0)], order=1)\nmt["mat_sio2"].set_optical_material(data=mt["mat_sio2_op"].passive_material)\n')),(0,r.kt)("p",null,"Note:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Although the electrical and optical material properties are bound together through a two-step setting, in reality, there is no inherent connection between them. For instance, it is possible to set both the electrical properties of SiO2 and the optical properties of Si for the same material. The simulation will not generate errors or warnings in such cases, so users need to determine by themselves whether the material settings align with the physics."),(0,r.kt)("li",{parentName:"ol"},"The FDTD simulation currently doesn't support metal materials. Therefore, the optical property of metal materials should be set to ",(0,r.kt)("inlineCode",{parentName:"li"},"mo.Material.PEC")," and the material name should also be ",(0,r.kt)("inlineCode",{parentName:"li"},'"pec"'),".")),(0,r.kt)("h4",{id:"233-create-structures"},"2.3.3 Create structures"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[12]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# region --- 3. Structure ---\n    st = pj.Structure(mesh_type="curve_mesh", mesh_factor=1.4, background_material=mt["mat_sio2"])\n\n    st.add_geometry(name="BOX", type="Rectangle", property={\n        "material": {"material": mt["mat_sio2"]},\n        "geometry": {"x": SiO2_x_center, "x_span": SiO2_x_span, "y": SiO2_y_center, "y_span": SiO2_y_span, "z_min": -SiO2_z_span/2, "z_max": SiO2_z_center}})\n\n    st.add_geometry(name="SOX", type="Rectangle", property={\n        "material": {"material": mt["mat_sio2"]},\n        "geometry": {"x": SiO2_x_center, "x_span": SiO2_x_span, "y": SiO2_y_center, "y_span": SiO2_y_span, "z_min": SiO2_z_center, "z_max": SiO2_z_span/2}})\n    \n    st.add_geometry(name="Si_input", type="Rectangle", property={\n        "material": {"material": mt["mat_si"]},\n        "geometry": {"x": input_wg_x_center, "x_span": input_wg_length, "y": Si_y_center, "y_span": input_wg_width, "z": Si_z_span/2, "z_span": Si_z_span}})\n\n    st.add_geometry(name="Si_taper", type="LinearTrapezoid", property={\n        "material": {"material": mt["mat_si"]},\n        "geometry": {"point_1_x": taper_x_min+taper_length, "point_1_y": taper_width/2, "point_2_x": taper_x_min+taper_length, "point_2_y": -taper_width/2,\n                     "point_3_x": taper_x_min, "point_3_y": -input_wg_width/2, "point_4_x": taper_x_min, "point_4_y": input_wg_width/2,\n                     "z_min": 0, "z_max": Si_z_span, "x": 0, "y": 0}})\n\n    st.add_geometry(name="Si_base", type="Rectangle", property={\n        "material": {"material": mt["mat_si"]},\n        "geometry": {"x": Si_slab_x_center, "x_span": Si_slab_length, "y": Si_y_center, "y_span": Si_slab_width, "z": Si_z_span/2, "z_span": Si_z_span}})\n\n    st.add_geometry(name="Ge", type="Pyramid", property={\n        "material": {"material": mt["mat_ge"]},\n        "geometry": {"x": Ge_x_center, "x_span_bottom": Ge_x_span_bottom, "x_span_top": Ge_x_span_top,\n                     "y": 0, "y_span_bottom": Ge_y_span_bottom, "y_span_top": Ge_y_span_top, "z": Ge_z_center, "z_span": Ge_z_span}})\n\n    st.add_geometry(name="Cathode", type="Pyramid", property={\n        "material": {"material": mt["pec"]},\n        "geometry": {"x": cathode_x_center, "x_span_bottom": cathode_x_span, "x_span_top": cathode_x_span,\n                     "y": cathode_y_center, "y_span_bottom": cathode_y_span_bottom, "y_span_top": cathode_y_span_top,\n                     "z": cathode_z_center, "z_span": cathode_z_span}})\n\n    st.add_geometry(name="Anode", type="Pyramid", property={\n        "material": {"material": mt["pec"]},\n        "geometry": {"x": anode_x_center, "x_span_bottom": anode_x_span, "x_span_top": anode_x_span,\n                     "y": anode_y_center, "y_span_bottom": anode_y_span_bottom, "y_span_top": anode_y_span_top,\n                     "z": anode_z_center, "z_span": anode_z_span}})\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"add_geometry()")," parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),"--Structure name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type"),"--Structure type"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"property"),"--Other properties, listed below")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Rectangle")," property list\uff1a"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"},"default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.rotate_x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.rotate_y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.rotate_z"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"material.material"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"material"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"material.mesh_order"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"LinearTrapezoid")," property list\uff1a"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"},"default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.point_1_x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.point_1_y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.point_2_x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.point_2_y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.point_3_x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.point_3_y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.point_4_x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.point_4_y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.rotate_x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.rotate_y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.rotate_z"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"material.material"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"material"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"material.mesh_order"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Pyramid")," property list\uff1a"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"},"default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_span_bottom"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_span_bottom"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_span_top"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_span_top"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.theta_x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.theta_y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.rotate_x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.rotate_y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.rotate_z"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"material.material"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"material"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"material.mesh_order"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")))),(0,r.kt)("p",null,"Note:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"mesh_order")," of a structure is default to be the ",(0,r.kt)("inlineCode",{parentName:"li"},"mesh_order")," of its material, and willed be overridden when set explicitly."),(0,r.kt)("li",{parentName:"ol"},"The larger of the ",(0,r.kt)("inlineCode",{parentName:"li"},"mesh_order")," of a structure, the higher of its priority. ",(0,r.kt)("inlineCode",{parentName:"li"},"mesh_order")," being the same, the structure created later has a higher priority than the one created earlier. When structures overlap, the one with higher priority overrides the one with lower priority.")),(0,r.kt)("h4",{id:"234-add-doping"},"2.3.4 Add doping"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[13]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    st.add_doping(name="Uniform", type="p", property={\n        "geometry": {"x": p_uniform_x_center, "x_span": p_uniform_x_span,\n                     "y": p_uniform_y_center, "y_span": p_uniform_y_span,\n                     "z": p_uniform_z_center, "z_span": p_uniform_z_span},\n        "general": {"distribution_function": "constant", "concentration": p_uniform_con}})\n    st.add_doping(name="p_well", type="p", property={\n        "geometry": {"x": p_well_x_center, "x_span": p_well_x_span, "y": p_well_y_center, "y_span": p_well_y_span,\n                     "z": p_well_z_center, "z_span": p_well_z_span},\n        "general": {"distribution_function": "gaussian", "source_face": "upper_z", "junction_width": p_well_junction_width,\n                    "concentration": p_well_con, "ref_concentration": 1e6}})\n    st.add_doping(name="p_pplus", type="p", property={\n        "geometry": {"x": p_pplus_x_center, "x_span": p_pplus_x_span, "y": p_pplus_y_center, "y_span": p_pplus_y_span,\n                     "z": p_pplus_z_center, "z_span": p_pplus_z_span},\n        "general": {"distribution_function": "gaussian", "source_face": "upper_z", "junction_width": p_pplus_junction_width,\n                    "concentration": p_pplus_con, "ref_concentration": 1e6}})\n    st.add_doping(name="n_pplus", type="n", property={\n        "geometry": {"x": n_pplus_x_center, "x_span": n_pplus_x_span, "y": n_pplus_y_center, "y_span": n_pplus_y_span,\n                     "z": n_pplus_z_center, "z_span": n_pplus_z_span},\n        "general": {"distribution_function": "gaussian", "source_face": "upper_z", "junction_width": n_pplus_junction_width,\n                    "concentration": n_pplus_con, "ref_concentration": n_pplus_ref}})\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"add_doping()")," parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),"--Doping name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type"),"--Doping type. Options are ",(0,r.kt)("inlineCode",{parentName:"li"},'"n"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"p"')," for n-type, p-type doping respectively"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"property"),"--Other properties")),(0,r.kt)("p",null,"According to the selection of ",(0,r.kt)("inlineCode",{parentName:"p"},"general.distribution_function"),", doping is distinguished as constant doping and gaussian doping. Detailed properties are listed below."),(0,r.kt)("p",null,"Doping property list:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"},"default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.rotate_x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.rotate_y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.rotate_z"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.distribution_function"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"str"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['constant', 'gaussian']")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.concentration"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.source_face"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"str"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Available when distribution_function is 'gaussian'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.junction_width"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Available when distribution_function is 'gaussian'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.ref_concentration"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Available when distribution_function is 'gaussian'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"volume.volume_type"),(0,r.kt)("td",{parentName:"tr",align:"left"},"'all'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"str"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['all', 'material', 'region']")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"volume.material_list"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"list"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Available when volume_type is 'material'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"volume.region_list"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"list"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Available when volume_type is 'region'")))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"geometry"),"--Set the geometry parameters of doping box"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"general"),"--Set the distribution function, concentration and so on"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"distribution_function"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"When it's set to ",(0,r.kt)("inlineCode",{parentName:"li"},'"constant"'),", only ",(0,r.kt)("inlineCode",{parentName:"li"},"concentration")," needs to be set"),(0,r.kt)("li",{parentName:"ul"},"When it's set to ",(0,r.kt)("inlineCode",{parentName:"li"},'"gaussian"'),": ",(0,r.kt)("inlineCode",{parentName:"li"},"concentration"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"ref_concentration"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"junction_width"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"source_face")," need to be set"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"concentration"),"--Concentration in the non-diffusion area"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ref_concentration"),"--Concentration on the edge of diffusion area (edge of doping box)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"junction_width"),"--Diffusion junction width"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"source_face"),"--The doping source face. Options are ",(0,r.kt)("inlineCode",{parentName:"li"},'"lower_x"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"lower_y"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"lower_z"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"upper_x"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"upper_y"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"upper_z"'),". ",(0,r.kt)("inlineCode",{parentName:"li"},'"lower_x"')," means the source face is ",(0,r.kt)("inlineCode",{parentName:"li"},"x=x_min"),". Similarly for the rest. There is no diffusion area on the edge of source face. As for the other edges, there is a diffusion area within the doping box.")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"volume"),"--Set a list of regions or materials to be doped"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"volume_type"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"When it's set to ",(0,r.kt)("inlineCode",{parentName:"p"},'"all"'),"(by default)\uff0cthe doping is applied to all the (semiconductor) structures, restricted by the doping box")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"When it's set to ",(0,r.kt)("inlineCode",{parentName:"p"},'"material"'),", ",(0,r.kt)("inlineCode",{parentName:"p"},"material_list")," needs to be set, which means the doping is applied to the structures with one of the specified materials and restricted by the doping box")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"When it's set to ",(0,r.kt)("inlineCode",{parentName:"p"},'"region"'),", ",(0,r.kt)("inlineCode",{parentName:"p"},"region_list")," needs to be set, which means the doping is applied to the specified structures and restricted by the doping box"))))),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Examples for complete doping setting syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[14]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'st.add_doping(name="p_pplus", type="p", property={\n    "geometry": {"x": p_pplus_x_center, "x_span": p_pplus_x_span, "y": p_pplus_y_center, "y_span": p_pplus_y_span,\n                 "z": p_pplus_z_center, "z_span": p_pplus_z_span},\n    "general": {"distribution_function": "gaussian", "source_face": "upper_z", "junction_width": p_pplus_junction_width,\n                "concentration": p_pplus_con, "ref_concentration": 1e6},\n    "volume": {"volume_type": "material", "material_list": [mt["mat_si"], mt["mat_ge"]]}})\nst.add_doping(name="n_pplus", type="n", property={\n    "geometry": {"x": n_pplus_x_center, "x_span": n_pplus_x_span, "y": n_pplus_y_center, "y_span": n_pplus_y_span,\n                 "z": n_pplus_z_center, "z_span": n_pplus_z_span},\n    "general": {"distribution_function": "gaussian", "source_face": "upper_z", "junction_width": n_pplus_junction_width,\n                "concentration": n_pplus_con, "ref_concentration": n_pplus_ref},\n    "volume": {"volume_type": "region", "region_list": ["Si_base", "Ge"]}})\n')),(0,r.kt)("h4",{id:"235-add-surface-recombination"},"2.3.5 Add surface recombination"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[15]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    # surface recombination\n    st.add_surface_recombination(name="Cathode_Ge", property={\n        "surface_type": "domain_domain", "interface_type": "MetalOhmicInterface",\n        "domain_1": "Cathode", "domain_2": "Ge", "infinite_recombination": False, "velocity_electron": 1e7, "velocity_hole": 1e7})\n\n    st.add_surface_recombination(name="Anode_Si", property={\n        "surface_type": "domain_domain", "interface_type": "MetalOhmicInterface",\n        "domain_1": "Anode", "domain_2": "Si_base", "infinite_recombination": False, "velocity_electron": 1e7, "velocity_hole": 1e7})\n\n    st.add_surface_recombination(name="Ge_SiO2", property={\n        "surface_type": "domain_domain", "interface_type": "InsulatorInterface",\n        "domain_1": "Ge", "domain_2": "SOX", "velocity_electron": Ge_SiO2_recombination_velocity, "velocity_hole": Ge_SiO2_recombination_velocity})\n\n    st.add_surface_recombination(name="Ge_Si", property={\n        "surface_type": "domain_domain", "interface_type": "HeteroJunction", "domain_1": "Ge", "domain_2": "Si_base"})\n    # endregion\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"add_surface_recombination()")," parameters\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),"--Custom name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"property"),"--Other properties")),(0,r.kt)("p",null,"Surface recombination property list:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"},"default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"surface_type"),(0,r.kt)("td",{parentName:"tr",align:"left"},"domain_domain"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['domain_domain', 'material_material']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"interface_type"),(0,r.kt)("td",{parentName:"tr",align:"left"},"null"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['null', 'InsulatorInterface', 'HomoJunction', 'HeteroJunction', 'MetalOhmicInterface', 'SolderPad']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"infinite_recombination"),(0,r.kt)("td",{parentName:"tr",align:"left"},"true"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Available when interface_type is 'MetalOhmicInterface'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"velocity_hole"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Available when interface_type is 'MetalOhmicInterface'/'InsulatorInterface'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"velocity_electron"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Available when interface_type is 'MetalOhmicInterface'/'InsulatorInterface'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"domain_1"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Available when surface_type is 'domain_domain'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"domain_2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Available when surface_type is 'domain_domain'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"material_1"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"material"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Available when surface_type is 'material_material'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"material_2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"material"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Available when surface_type is 'material_material'")))),(0,r.kt)("p",null,"\u5176\u4e2d\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"surface_type"),"--Type of selection for the surface",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"When ",(0,r.kt)("inlineCode",{parentName:"li"},"surface_type")," is ",(0,r.kt)("inlineCode",{parentName:"li"},'"domain_domain"'),", the surface is the interface between two structures "),(0,r.kt)("li",{parentName:"ul"},"When ",(0,r.kt)("inlineCode",{parentName:"li"},"surface_type"),' is "material_material"`, the surface is the interface between two materials'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"interface_type"),"--Type of contact for the surface",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"InsulatorInterface"'),"--Semiconductor-insulator interface"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"HomoJunction"'),"--Homogeneous semiconductor-semiconductor interface"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"HeteroJunction"'),"--Heterogeneous semiconductor-semiconductor interface"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"MetalOhmicInterface"'),"--Semiconductor-conductor interface"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"SolderPad"'),"--Conductor-insulator interface"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"infinite_recombination"),"--Only available when ",(0,r.kt)("inlineCode",{parentName:"li"},"interface_type")," is ",(0,r.kt)("inlineCode",{parentName:"li"},'"MetalOhmicInterface"'),". The surface recombination velocity of holes and electrons will be available when ",(0,r.kt)("inlineCode",{parentName:"li"},"infinite_recombination")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"False"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"velocity_hole"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"velocity_electron"),"--Surface recombination velocity of holes and electrons. Available when ",(0,r.kt)("inlineCode",{parentName:"li"},"interface_type")," is ",(0,r.kt)("inlineCode",{parentName:"li"},'"MetalOhmicInterface"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"InsulatorInterface"'),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"domain_1"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"domain_2"),"--Names of the two structures at the interface. They must be set explicitly when ",(0,r.kt)("inlineCode",{parentName:"li"},"surface_type")," is ",(0,r.kt)("inlineCode",{parentName:"li"},'"domain_domain"'),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"material_1"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"material_2"),"--The two materials at the interface. They must be set explicitly when ",(0,r.kt)("inlineCode",{parentName:"li"},"surface_type")," is ",(0,r.kt)("inlineCode",{parentName:"li"},'"material_material"'),".")),(0,r.kt)("h4",{id:"236-set-waveform"},"2.3.6 Set waveform"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[16]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    # region --- 4. Waveform ---\n    wv = pj.Waveform()\n    wv.add(name="waveform", wavelength_center=wavelength_center, wavelength_span=wavelength_span)\n    # endregion\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"wv.add()")," parameters\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),"--Name of the waveform"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"wavelength_center"),"--Center of wavelength"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"wavelength_span"),"--Span of wavelength"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"unit"),"--Unit of wavelength. Options are",(0,r.kt)("inlineCode",{parentName:"li"},'"um"')," and ",(0,r.kt)("inlineCode",{parentName:"li"},'"nm"'),"\uff0cdefault to be",(0,r.kt)("inlineCode",{parentName:"li"},'"um"'))),(0,r.kt)("h4",{id:"237-set-boundary-conditions-of-optical-simulation"},"2.3.7 Set boundary conditions of optical simulation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[17]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    # region --- 5. oboundary --- for FDTD simulation\n    st.OBoundary(property={\n        "geometry": {"x": x_mean, "y": y_mean, "z": z_mean, "x_span": x_span, "y_span": y_span, "z_span": z_span}})\n    # endregion\n')),(0,r.kt)("p",null,"Boundary conditions of optical simulation property list:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"},"default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general_pml.pml_same_settings"),(0,r.kt)("td",{parentName:"tr",align:"left"},"true"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general_pml.pml_profile"),(0,r.kt)("td",{parentName:"tr",align:"left"},"standard"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general_pml.pml_layer"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general_pml.pml_kappa"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general_pml.pml_sigma"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general_pml.pml_polynomial"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general_pml.pml_alpha"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general_pml.pml_alpha_polynomial"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general_pml.pml_min_layers"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general_pml.pml_max_layers"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"boundary.x_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['PML', 'PEC', 'metal', 'PMC', 'periodic']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"boundary.x_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['PML', 'PEC', 'metal', 'PMC', 'symmetric', 'anti_symmetric', 'periodic']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"boundary.y_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['PML', 'PEC', 'metal', 'PMC', 'periodic']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"boundary.y_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['PML', 'PEC', 'metal', 'PMC', 'symmetric', 'anti_symmetric', 'periodic']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"boundary.z_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['PML', 'PEC', 'metal', 'PMC', 'periodic']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"boundary.z_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['PML', 'PEC', 'metal', 'PMC', 'symmetric', 'anti_symmetric', 'periodic']",".")))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"geometry"),"--Set the optical simulation region"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boundary"),"--Set the optical boundary conditions, default to be ",(0,r.kt)("inlineCode",{parentName:"p"},'"PML"')," for all the boundaries"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"general_pml"),"--Set pml-related parameters"),(0,r.kt)("h4",{id:"238-set-local-mesh"},"2.3.8 Set local mesh"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[18]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    # region --- 6. mesh ---\n    st.add_mesh(name="OMesh_Ge", property={\n        "geometry": {"x": x_min+1, "x_span": 0, "y": 0, "y_span": 0, "z": Ge_z_center, "z_span": Ge_z_span},\n        "general": {"dz": omesh_grid_Ge}})\n\n    st.add_mesh(name="OMesh_Si", property={\n        "geometry": {"x": x_min+1, "x_span": 0, "y": 0, "y_span": 0, "z": Si_z_span/2, "z_span": Si_z_span},\n        "general": {"dz": omesh_grid_Si}})\n\n    st.add_emesh(name="EMesh_Local", property={\n        "y_min": oe_y_min, "y_max": oe_y_max, "z_min": oe_z_min, "z_max": oe_z_max, "mesh_size": egrid_local})\n    \n    st.add_emesh(name="EMesh_Genrate", property={\n        "y_min": oe_y_min, "y_max": Ge_y_span_top/2, "z_min": Si_z_span, "z_max": Ge_z_span+Si_z_span, "mesh_size": egrid_genrate})\n\n    st.add_emesh(name="EMesh_Ge_SiO2_Interface", property={\n        "y": 0, "y_span": Ge_y_span_top, "z": Si_z_span+Ge_z_span, "z_span": remesh_thickness, "mesh_size": egrid_interface})\n\n    st.add_emesh(name="EMesh_Ge_Si_Interface", property={\n        "y": 0, "y_span": Si_slab_width, "z": Si_z_span, "z_span": remesh_thickness, "mesh_size": egrid_interface})\n    \n    st.add_emesh_along_line(name="EMesh_Ge_SiO2_Slope_Interface", property={\n        "start_x": oe_x_mean, "start_y": Ge_y_span_bottom/2, "start_z": Si_z_span, "end_x": oe_x_mean, "end_y": Ge_y_span_top/2, "end_z": Si_z_span+Ge_z_span, "mesh_size": egrid_interface})\n    # endregion\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"add_mesh()")," set the local mesh for optical simulation, parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),"--Custom name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"property"),"--Other properties")),(0,r.kt)("p",null,"Optical local mesh property list:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"},"default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.dx"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.dy"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.dz"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"geometry"),"--Set the region of local mesh. When ",(0,r.kt)("inlineCode",{parentName:"p"},"x_span")," doesn't vanish, the mesh setting will be applied to the range along the x axis. Similarly for the rest"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"general"),"--Set the mesh size in the corresponding direction"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"add_emesh()")," set a rectangle region for local mesh of electrical simulation. Parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),"--Custom name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"property"),"--Other properties")),(0,r.kt)("p",null,"Local mesh of electrical simulation in rectangle region property list:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"},"default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"x_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"x_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"x_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"y_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"y_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"y_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"z"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"z_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"z_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"z_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"mesh_size"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"max size of electrical simulation mesh")))),(0,r.kt)("p",null,"Note:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"When the simulation region is in the xy plane, only the parameters in the x, y direction are effective, and parameters in the z direction will be ignored. Similarly for the rest.")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"add_emesh_along_line()")," set a line region for local mesh of electrical simulation. Parameters\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),"--Custom name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"property"),"--Other properties")),(0,r.kt)("p",null,"Local mesh of electrical simulation in line region property list:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"},"default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"start_x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"start_y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"start_z"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"end_x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"end_y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"end_z"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"mesh_size"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0.01"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})))),(0,r.kt)("p",null,"Note:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"When the simulation region is in the xy plane, besides ",(0,r.kt)("inlineCode",{parentName:"li"},"start_x"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"start_y"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"end_x")," and  ",(0,r.kt)("inlineCode",{parentName:"li"},"end_y"),", it is also required to set the ",(0,r.kt)("inlineCode",{parentName:"li"},"start_z")," and  ",(0,r.kt)("inlineCode",{parentName:"li"},"end_z"),", which should both be the same as the z coordinate of the plane. Similarly for the rest.")),(0,r.kt)("h4",{id:"239-set-optical-sources"},"2.3.9 Set optical sources"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[19]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    # region --- 7. source ---\n    src = pj.Source()\n    src.add(name="Mode Source", axis="x_forward", type="mode_source", property={\n        "geometry": {"x": x_min+1, "x_span": 0, "y": y_mean, "y_span": y_span, "z": z_mean, "z_span": z_span},\n        "general": {"mode_selection": "user_select", "waveform": {"waveform_id_select": wv["waveform"]}}})\n    # endregion\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"src.add()")," parameters\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),"--Name of the source"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"axis"),"--Direction of the source. ",(0,r.kt)("inlineCode",{parentName:"li"},'"x_forward"')," means light propagating along x axis and in the direction of increasing x coordinate. ",(0,r.kt)("inlineCode",{parentName:"li"},'"x_forward"')," means the opposite direction. Similarly for the rest"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type"),"--Type of the source. It is mode source in this example"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"property"),"--Other properties")),(0,r.kt)("p",null,"Mode source property list:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"},"default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.amplitude"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1.0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.phase"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0.0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.mode_selection"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['fundamental', 'fundamental_TE', 'fundamental_TM', 'fundamental_TE_and_TM', 'user_select', 'user_import']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.mode_index"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.search"),(0,r.kt)("td",{parentName:"tr",align:"left"},"max_index"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['near_n', 'max_index']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1.0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.number_of_trial_modes"),(0,r.kt)("td",{parentName:"tr",align:"left"},"20"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.waveform.waveform_id_select"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"any"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.rotations.theta"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.rotations.phi"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.rotations.rotation_offset"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"bent_waveguide.bent_waveguide"),(0,r.kt)("td",{parentName:"tr",align:"left"},"false"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"bent_waveguide.radius"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"bent_waveguide.orientation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"20"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"bent_waveguide.location"),(0,r.kt)("td",{parentName:"tr",align:"left"},"simulation_center"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['simulation_center']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"geometray"),"--Set geometric parameters of optical source"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"bent_waveguide"),"--Set parameters related to bent waveguide"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"general"),"\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"mode_selection"),"--Set the type of selection for the eigen mode. When it is ",(0,r.kt)("inlineCode",{parentName:"li"},'"user_select"'),", the mode of index in ",(0,r.kt)("inlineCode",{parentName:"li"},"mode_index")," is selected"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"waveform"),"--Set the waveform of the source",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"waveform_id_select"),"--Set to be a specified waveform")))),(0,r.kt)("h4",{id:"2310-set-monitors"},"2.3.10 Set monitors"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[20]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    # region ---8.monitor ---\n    mn = pj.Monitor()\n    mn.add(name="Power Monitor", type="power_monitor", property={\n        "general": {"frequency_profile": {"wavelength_center": wavelength_center, "wavelength_span": wavelength_span}},\n        "geometry": {"monitor_type": "3d", "x_min": Ge_x_center-Ge_x_span_bottom/2, "x_max": Ge_x_center+Ge_x_span_bottom/2,\n                     "y": 0, "y_span": Ge_y_span_bottom, "z": Ge_z_center, "z_span": Ge_z_span}})\n    \n    mn.add(name="y=0", type="power_monitor", property={\n        "general": {"frequency_profile": {"wavelength_center": wavelength_center, "wavelength_span": wavelength_span}},\n        "geometry": {"monitor_type": "2d_y_normal", "x_min": Ge_x_center-Ge_x_span_bottom/2, "x_max": Ge_x_center+Ge_x_span_bottom/2,\n                     "y": 0, "y_span": 0, "z": Ge_z_center, "z_span": Ge_z_span}})\n    \n    mn.add(name="z=0.47", type="power_monitor", property={\n        "general": {"frequency_profile": {"wavelength_center": wavelength_center, "wavelength_span": wavelength_span}},\n        "geometry": {"monitor_type": "2d_z_normal", "x_min": Ge_x_center-Ge_x_span_bottom/2, "x_max": Ge_x_center+Ge_x_span_bottom/2,\n                     "y": 0, "y_span": Ge_y_span_bottom, "z": Ge_z_center, "z_span": 0}})\n    # endregion\n')),(0,r.kt)("p",null,"The monitor ",(0,r.kt)("inlineCode",{parentName:"p"},'"Power Monitor"')," is of the 3D type, set to record the optical field profile in the ",(0,r.kt)("inlineCode",{parentName:"p"},'"Ge"')," structure, which will be used to calculate the optical generation rate. The monitors ",(0,r.kt)("inlineCode",{parentName:"p"},'"y=0"')," and ",(0,r.kt)("inlineCode",{parentName:"p"},'"z=0.47"')," are both of the 2D type, set to visualize the optical field profile at the specified cross-sections."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"mn.add()")," parameters\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),"--Name of the monitor"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type"),"--Type of the monitor"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"property"),"--Other properties")),(0,r.kt)("p",null,"Power monitor property list:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"},"default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.frequency_profile.sample_spacing"),(0,r.kt)("td",{parentName:"tr",align:"left"},"uniform"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['uniform']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.frequency_profile.use_wavelength_spacing"),(0,r.kt)("td",{parentName:"tr",align:"left"},"true"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.frequency_profile.spacing_type"),(0,r.kt)("td",{parentName:"tr",align:"left"},"wavelength"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['wavelength', 'frequency']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.frequency_profile.wavelength_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.frequency_profile.wavelength_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.frequency_profile.wavelength_center"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.frequency_profile.wavelength_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.frequency_profile.frequency_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.frequency_profile.frequency_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.frequency_profile.frequency_center"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.frequency_profile.frequency_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.frequency_profile.frequency_points"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.monitor_type"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['point', 'linear_x', 'linear_y', 'linear_z', '2d_x_normal', '2d_y_normal', '2d_z_normal', '3d']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"advanced.sampling_frequency.min_sampling_per_cycle"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"})))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"geometry"),"--Set the geometric parameters of the monitor, including the dimension and the size"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"general"),"--Set the frequency points of the monitor"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"frequency_profile"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sample_spacing"),"--Only support ",(0,r.kt)("inlineCode",{parentName:"p"},'"uniform"')," currently, which means the frequency points are uniformly sampled in either wavelength or frequency")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"use_wavelength_spacing"),"--Default to be ",(0,r.kt)("inlineCode",{parentName:"p"},"True"),". When it' ",(0,r.kt)("inlineCode",{parentName:"p"},"True"),", the frequency points in sampled in wavelength, otherwise, in frequency.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"spacing_type"),"--Default to be ",(0,r.kt)("inlineCode",{parentName:"p"},'"wavelength"'),". When it's ",(0,r.kt)("inlineCode",{parentName:"p"},'"wavelength"'),", the frequency range is set in wavelength; When it's ",(0,r.kt)("inlineCode",{parentName:"p"},'"frequency"'),", the frequency range is set in frequency")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"frequency_points"),"--Number of frequency points"))))),(0,r.kt)("h4",{id:"2311-preview-the-structures"},"2.3.11 Preview the structures"),(0,r.kt)("h5",{id:"23111-define-the-preview-function"},"2.3.11.1 Define the preview function"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[21]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# -------------    preview    --------------\ntime_str = time.strftime("%Y%m%d_%H%M%S/", time.localtime())\n\n@timed\ndef preview():\n    pj = pd_project(project_name=simu_name + time_str, run_mode="local", material_property="normal")\n\n    plot_path = str(Path(__file__).parent.as_posix()) + "/plots/"\n    if not os.path.exists(plot_path):\n        os.makedirs(plot_path)\n')),(0,r.kt)("p",null,"Call the ",(0,r.kt)("inlineCode",{parentName:"p"},"pd_project")," function defined earlier to create a new project ",(0,r.kt)("inlineCode",{parentName:"p"},"pj"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"simu_name")," is set in the general parameters. ",(0,r.kt)("inlineCode",{parentName:"p"},"time_str")," is the time stamp of when the function started running and is added to the project name, to make the project name different for each simulation and the simulation results not overwritten by each other."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"plot_path")," will be set to the save path of the result extraction. Here, it is set to the 'plots' folder located in the same directory as this script. If the path doesn't exist, ",(0,r.kt)("inlineCode",{parentName:"p"},"os.makedirs()")," should be called to create it."),(0,r.kt)("h5",{id:"23112-add-solvers"},"2.3.11.2 Add solvers"),(0,r.kt)("p",null,"Optical and electrical solvers are added within the preview function. The corresponding structure preview is only available when the solvers are present."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[22]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    simu = pj.Simulation()\n    simu.add(name="preview_fdtd", type="AFDTD", property={\n        "mesh_settings": {"mesh_accuracy": {"cells_per_wavelength": cells_per_wavelength}}})\n\n    simu.add(name="preview_oedevice", type="OEDevice", property={\n        "geometry": {"dimension": "2d_x_normal", "x": oe_x_mean, "x_span": 0, "y": oe_y_mean, "y_span": oe_y_span, "z_min": oe_z_min, "z_max": oe_z_max},\n        "genrate": {"genrate_path": "", "coordinate_unit": "m", "field_length_unit": "m", "source_fraction": source_fraction},\n        "general": {"norm_length": normal_length, "solver_mode": "steady_state", "simulation_temperature": temperature},\n        "advanced": {"non_linear_solver": "Newton", "linear_solver": "MUMPS", "max_iterations": 50}})\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"simu.add()")," parameters\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),"--Name of the solver"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type"),"--Type of the solver. For active device simulation, the type of FDTD solver is ",(0,r.kt)("inlineCode",{parentName:"li"},'"AFDTD"'),", and the type of carrier transport solver is ",(0,r.kt)("inlineCode",{parentName:"li"},'"OEDevice"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"property"),"--Other properties")),(0,r.kt)("p",null,"For ",(0,r.kt)("inlineCode",{parentName:"p"},"AFDTD"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"mesh_settings.mesh_accuracy.cells_per_wavelength")," means the number of mesh cells per wavelength. The larger the number, the smaller the mesh size and the longer the simulation time."),(0,r.kt)("p",null,"For ",(0,r.kt)("inlineCode",{parentName:"p"},"OEDevice"),"\uff0cthe other properties are not necessary. So the ",(0,r.kt)("inlineCode",{parentName:"p"},"property")," can be empty. Detailed parameter settings for ",(0,r.kt)("inlineCode",{parentName:"p"},"OEDevice")," can be found in the appendix."),(0,r.kt)("h5",{id:"23113-preview-doping-profile"},"2.3.11.3 Preview doping profile"),(0,r.kt)("p",null,"Preview the doping profile by the ",(0,r.kt)("inlineCode",{parentName:"p"},"run_doping")," function of the ",(0,r.kt)("inlineCode",{parentName:"p"},"OEDevice")," solver."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[23]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    simu["preview_oedevice"].run_doping(name="x_in", property={\n        "geometry": {"dimension": "2d_x_normal", "x": oe_x_mean, "x_span": 0, "y": oe_y_mean, "y_span": oe_y_span, "z_min": oe_z_min, "z_max": oe_z_max}},\n        norm="log", scale="equal", superimpose=False, show=False,\n        material_list=["Ge", "Si"], cmin=8e5, savepath=plot_path + simu_name + "_" + time_str + "doping_x_in")\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"run_doping()")," parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),"--Custom name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"norm"),"--Set the normalization method for the intensity plot, default to be ",(0,r.kt)("inlineCode",{parentName:"li"},'"linear"'),", which means linear normalization. It can also be set to ",(0,r.kt)("inlineCode",{parentName:"li"},'"log"'),", which means taking the logarithm of the intensity first, and then performing linear normalization. The net doping is calculated as $N_D-N_A$, where $N_D$ denotes the donor concentration and $N_A$ denotes the acceptor concentration"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"scale"),"--Set the scaling method of the vertical and horizontal axes, default to be ",(0,r.kt)("inlineCode",{parentName:"li"},'"equal"'),", which means the two axes are scaled proportional. It can also be set to ",(0,r.kt)("inlineCode",{parentName:"li"},'"auto"'),", which means the two axes are scaled automatically"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"superimpose"),"--Set whether the structure plot and the doping plot superimpose or not, default to be ",(0,r.kt)("inlineCode",{parentName:"li"},'"True"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"show"),"--Set whether the result plot should be displayed in a popup window, default to be ",(0,r.kt)("inlineCode",{parentName:"li"},"False"),", which means not and it will be saved to the ",(0,r.kt)("inlineCode",{parentName:"li"},"savepath")," automatically. When it is ",(0,r.kt)("inlineCode",{parentName:"li"},"True"),", the result plot won't pop up and will not be saved unless operated manually"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"material_list"),"--Specify a list of materials to preview the doping profile. And each item in the list should be the chemical formula of the material. Default to be empty, which means all the materials will be previewed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"region_list"),"--Specify a list of structures to preview the doping profile. And each item in the list is the name of the structure. Default to be empty, which means all the structures will be previewed. When it's not empty, it will override the ",(0,r.kt)("inlineCode",{parentName:"li"},"material_list")," setting"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cmax"),"--Set the maximum of the colorbar for the intensity plot. When the concentration is greater than this value, it will be displayed as this value. It is ineffective for net doping"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cmin"),"--Set the minimum of the colorbar for the intensity plot. When the concentration is smaller than this value, it will be displayed as this value. It is ineffective for net doping"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"savepath"),"--The save path for the result"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"property"),"--Other properties")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"run_doping")," property list:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"},"default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.dimension"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['2d_x_normal', '2d_y_normal', '2d_z_normal']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"geometry"),"--Set the region of doping preview"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dimension"),"--Set the dimension of doping preview. The electrical simulation only supports the 2D type currently, so the doping and its preview are all considered in a plane. When ",(0,r.kt)("inlineCode",{parentName:"li"},"dimension")," is ",(0,r.kt)("inlineCode",{parentName:"li"},'"2d_x_normal"'),", it means the preview is in the yz plane. Similarly for the rest.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Result show of the doping preview")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Net doping preview",src:a(6775).Z,width:"1200",height:"800"})),(0,r.kt)("h5",{id:"23114-preview-index-profile"},"2.3.11.4 Preview index profile"),(0,r.kt)("p",null,"Preview the index profile by the ",(0,r.kt)("inlineCode",{parentName:"p"},"run_index")," function of the ",(0,r.kt)("inlineCode",{parentName:"p"},"AFDTD")," solver."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[24]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    simu["preview_fdtd"].run_index(name="index_preview_x_10", property={\n        "geometry": {"x": 10, "x_span": 0, "y": 0, "y_span": 4, "z_min": -0.5, "z_max": 0.72}},\n        savepath=plot_path + simu_name + "_" + time_str + "MeshView/" + "x=10", export_csv=False, show=False)\n\n    simu["preview_fdtd"].run_index(name="index_preview_z_0.11", property={\n        "geometry": {"x_min": -43, "x_max": 19, "y": 0, "y_span": 6.4, "z": 0.11, "z_span": 0}},\n        savepath=plot_path + simu_name + "_" + time_str + "MeshView/" + "z=0.11", export_csv=False, show=False)\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"run_index()")," parameters\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),"--Custom name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"export_csv"),"--Whether to export csv file, default to be ",(0,r.kt)("inlineCode",{parentName:"li"},"False")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"savepath"),"--Save path of the result extraction"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"show"),"--Whether to show the plot in a popup window, default to be ",(0,r.kt)("inlineCode",{parentName:"li"},"False")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"export_n"),"--Whether to export nx, ny, nz, default to be ",(0,r.kt)("inlineCode",{parentName:"li"},"True")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"export_c"),"--Whether to export \u03c3x, \u03c3y, \u03c3z, default to be ",(0,r.kt)("inlineCode",{parentName:"li"},"False")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"max_index"),"--Set the maximum of the intensity plot of index, default to be ",(0,r.kt)("inlineCode",{parentName:"li"},"None")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"max_sigma"),"--Set the maximum of the intensity plot of conductivity, default to be ",(0,r.kt)("inlineCode",{parentName:"li"},"None")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"property"),"--Other properties")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"run_index")," property list\uff1a"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"},"default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.monitor_type"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['2d_x_normal', '2d_y_normal', '2d_z_normal']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Restrained by condition: >=0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"geometry"),"--Set the region of index preview. The ",(0,r.kt)("inlineCode",{parentName:"p"},"run_index")," function currently only supports the index preview in a 2D plane. If ",(0,r.kt)("inlineCode",{parentName:"p"},"x_span")," is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),", the preview will be performed in the yz plane. Similarly for the rest."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Result show of the index preview")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Index Preview",src:a(8520).Z,width:"640",height:"480"})),(0,r.kt)("center",null,"Fig 2. nx"),(0,r.kt)("h2",{id:"3-simulation"},"3. Simulation"),(0,r.kt)("h3",{id:"31-dark-current"},"3.1 Dark current"),(0,r.kt)("p",null,"This section performs the simulation of dark current in the ",(0,r.kt)("inlineCode",{parentName:"p"},"VPD0B_Id.py")," script by invoking the ",(0,r.kt)("inlineCode",{parentName:"p"},"pd_project")," function."),(0,r.kt)("h4",{id:"311-import-simulation-toolkit"},"3.1.1 Import simulation toolkit"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[25]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from VPD00_structure import *\nimport time\nimport os\nfrom pathlib import Path\n")),(0,r.kt)("p",null,"All the variables and functions from ",(0,r.kt)("inlineCode",{parentName:"p"},"VPD00_structure.py")," are imported."),(0,r.kt)("h4",{id:"312-set-general-parameters"},"3.1.2 Set general parameters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[26]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'start = time.time()\ntime_str = time.strftime("%Y%m%d_%H%M%S/", time.localtime())\n\n# region --- 0. General Parameters ---\ntcad_vmin = 0  # unit:Volt\ntcad_vmax = 4      # unit:Volt\ntcad_vstep = 0.5   # unit:Volt\n# endregion\n\n# ----------------------   set project_path\nsimu_name = "VPD0B_Id"\nproject_name = simu_name + "_" + run_mode + "_" + time_str\nmaterial_property = "normal"\ngenrate_file_path = ""\n# --- set path ---\nplot_path = str(Path(__file__).parent.as_posix()) + "/plots/"\nif not os.path.exists(plot_path):\n    os.makedirs(plot_path)\n')),(0,r.kt)("h4",{id:"313-create-a-new-project"},"3.1.3 Create a new project"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[27]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"pj = pd_project(project_name, run_mode, material_property)\n")),(0,r.kt)("h4",{id:"314-add-electrodes"},"3.1.4 Add electrodes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[28]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'st = pj.Structure()\n\nst.add_electrode(name="cathode", property={\n    "solid": "Cathode", "bc_mode": "steady_state", "sweep_type": "range",\n    "range_start": tcad_vmin, "range_stop": tcad_vmax, "range_interval": tcad_vstep, "apply_AC_small_signal": "none"})\nst.add_electrode(name="anode", property={\n    "solid": "Anode", "bc_mode": "steady_state",\n    "sweep_type": "single", "voltage": 0, "apply_AC_small_signal": "none"})\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"add_electrode()")," parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),"--Name of the electrode"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"property"),"--Other properties")),(0,r.kt)("p",null,"The detailed property list of electrode can be found in the appendix. Here a range of voltage from 0V to 4V is applied to the electrode ",(0,r.kt)("inlineCode",{parentName:"p"},'"cathode"'),", and the step of the voltage is 0.5V."),(0,r.kt)("h4",{id:"315-add-the-solver"},"3.1.5 Add the solver"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[29]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# ----------------------   set simu\nsimu = pj.Simulation()\n\nsimu.add(name="oedevice", type="OEDevice", property={\n    "geometry": {"dimension": "2d_x_normal", "x": oe_x_mean, "x_span": oe_x_span, "y": oe_y_mean, "y_span": oe_y_span, "z_min": oe_z_min, "z_max": oe_z_max},\n    "genrate": {"genrate_path": genrate_file_path, "coordinate_unit": "m", "field_length_unit": "m", "source_fraction": source_fraction},\n    "general": {"norm_length": normal_length, "solver_mode": "steady_state", "simulation_temperature": temperature},\n    "advanced": {"non_linear_solver": "Newton", "linear_solver": "MUMPS", "max_iterations": 50}})\n')),(0,r.kt)("p",null,"The detailed property list of ",(0,r.kt)("inlineCode",{parentName:"p"},"OEDevice")," solver can be found in the appendix. Here:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"genrate"),"--Set the properties for optical generation rate"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"genrate_path"),"--It's set to ",(0,r.kt)("inlineCode",{parentName:"li"},"genrate_file_path"),", which is ",(0,r.kt)("inlineCode",{parentName:"li"},'""'),", an empty string. That means no optical generation rate is imported to the ",(0,r.kt)("inlineCode",{parentName:"li"},"OEDevice")," solver. Therefore, the simulation is for dark current. And the rest properties in ",(0,r.kt)("inlineCode",{parentName:"li"},"genrate")," is ineffective in this case")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"geometry"),"--Set the geometric parameters for the simulation region"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dimension"),"--It's set to ",(0,r.kt)("inlineCode",{parentName:"li"},"2d_x_normal"),", which means the simulation is in the yz plane")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"general"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"norm_length"),"--It's set to ",(0,r.kt)("inlineCode",{parentName:"li"},"normal_length"),", which is ",(0,r.kt)("inlineCode",{parentName:"li"},"20"),", meaning that the size of the device in the third dimension is 20\u03bcm. That is to say its length in the x-direction is 20\u03bcm"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"solver_mode"),"--It's set to ",(0,r.kt)("inlineCode",{parentName:"li"},'"steady_state"'),", which means a steady state simulation")),(0,r.kt)("h4",{id:"316-run-the-solver"},"3.1.6 Run the solver"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[30]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# --- Run ---\n# check license and print version before & after simulation.\nresult_device = simu["oedevice"].run()\n\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"result_device")," stores the information of the simulation result, which can be used to perform result extraction."),(0,r.kt)("h4",{id:"317-extract-the-result"},"3.1.7 Extract the result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[31]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# --- Extract ---\nresult_device.extract(data="I", electrode="cathode", export_csv=True,\n                      show=False, savepath=plot_path + project_name + "IV_cathode")\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"result_device.extract()")," parameters\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data"),"--Type of the result. Here it's set to ",(0,r.kt)("inlineCode",{parentName:"li"},'"I"')," to extract the I-V curve from the simulation result"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"electrode"),"--Name of an electrode, which means the current data is from the electrode"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"export_csv"),"--Whether to export the csv result"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"show"),"--Whether to show the plot in a popup window"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"savepath"),"--The save path for the result extraction")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Result show of the dark current extraction")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Dark Current",src:a(999).Z,width:"1200",height:"800"})),(0,r.kt)("center",null,"Fig 3. Dark Current"),(0,r.kt)("h4",{id:"318-print-the-simulation-time"},"3.1.8 Print the simulation time"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[32]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'print("\\x1b[6;30;42m" + "[Finished in %(t)s mins]" % {"t": round((time.time() - start)/60, 2)} + "\\x1b[0m")\n')),(0,r.kt)("h3",{id:"32-resistance"},"3.2 Resistance"),(0,r.kt)("p",null,"This simulation applies a forward bias to the electrode ",(0,r.kt)("inlineCode",{parentName:"p"},'"anode"'),". And then the I-V curve is extracted and fitted to obtain the resistance. The script is in the ",(0,r.kt)("inlineCode",{parentName:"p"},"VPD0C_Rs.py")," file."),(0,r.kt)("h4",{id:"321-simulate-and-extract-the-i-v-curve"},"3.2.1 Simulate and extract the I-V curve"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[33]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from VPD00_structure import *\nimport time\nimport os\nfrom pathlib import Path\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\n# region --- 0. General Parameters ---\ntcad_vmin = 0  # unit:Volt\ntcad_vmax = 1.5      # unit:Volt\ntcad_vstep = 0.25   # unit:Volt\n# endregion\n\nstart = time.time()\ntime_str = time.strftime("%Y%m%d_%H%M%S/", time.localtime())\n\n# ----------------------   set project_path\nsimu_name = "VPD0C_Rs"\nmaterial_property = "normal"\nproject_name = simu_name + "_" + run_mode + "_" + time_str\ngenrate_file_path = ""\n\n# --- set path ---\nplot_path = str(Path(__file__).parent.as_posix()) + "/plots/"\nif not os.path.exists(plot_path):\n    os.makedirs(plot_path)\n\n# --- Project from pd_structure.py ---\npj = pd_project(project_name, run_mode, material_property)\nst = pj.Structure()\n\nst.add_electrode(name="anode", property={\n    "solid": "Anode", "bc_mode": "steady_state", "sweep_type": "range",\n    "range_start": tcad_vmin, "range_stop": tcad_vmax, "range_interval": tcad_vstep, "apply_AC_small_signal": "none"})\nst.add_electrode(name="cathode", property={\n    "solid": "Cathode", "bc_mode": "steady_state",\n    "sweep_type": "single", "voltage": 0, "apply_AC_small_signal": "none"})\n\n# ----------------------   set simu\nsimu = pj.Simulation()\n\nsimu.add(name="oedevice", type="OEDevice", property={\n    "geometry": {"dimension": "2d_x_normal", "x": oe_x_mean, "x_span": oe_x_span, "y": oe_y_mean, "y_span": oe_y_span, "z_min": oe_z_min, "z_max": oe_z_max},\n    "genrate": {"genrate_path": genrate_file_path, "coordinate_unit": "m", "field_length_unit": "m", "source_fraction": source_fraction},\n    "general": {"norm_length": normal_length, "solver_mode": "steady_state", "simulation_temperature": temperature},\n    "advanced": {"non_linear_solver": "Newton", "linear_solver": "MUMPS", "max_iterations": 50}})\n\n# --- Run ---\n# check license and print version before & after simulation.\nresult_device = simu["oedevice"].run()\n\n# --- Extract IV ---\nIV_file_folder = plot_path + project_name + "IV_anode"\nresult_device.extract(data="I", electrode="anode",\n                      export_csv=True, show=False, savepath=IV_file_folder)\n')),(0,r.kt)("p",null,"A range of voltage from 0V to 1.5V is applied to the electrode ",(0,r.kt)("inlineCode",{parentName:"p"},'"anode"'),", with a step of 0.25V. No optical generation rate is applied. And a steady state simulation is performed to extract the I-V curve, which is saved to the folder ",(0,r.kt)("inlineCode",{parentName:"p"},"IV_file_folder"),"."),(0,r.kt)("h4",{id:"322-fit-v-i-curve-to-obtain-resistance"},"3.2.2 Fit V-I curve to obtain resistance"),(0,r.kt)("h5",{id:"3221-read-the-saved-i-v-data"},"3.2.2.1 Read the saved I-V data"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[34]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# region --- calculate R ---\nIV_file = os.path.join(IV_file_folder, "0_I_Real.csv")\nfor i in range(10):\n    IV_file = os.path.join(IV_file_folder, str(i) + "_I_Real.csv")\n    if os.path.exists(IV_file):\n        break\nrawdata = np.genfromtxt(IV_file, skip_header=3, delimiter=\',\')\nI = rawdata[:,1]\nV = rawdata[:,0]\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'"0_I_Real.csv"')," is filename generated automatically of the I-V result. The ",(0,r.kt)("inlineCode",{parentName:"p"},'"0"')," in the beginning indicates the index of the electrode. When the I-V curve is from a different electrode, the index will change. Therefore, a iteration from 0 to 9 is applied to find the saved I-V data file."),(0,r.kt)("h5",{id:"3222-fit-the-data-to-obtain-resistance"},"3.2.2.2 Fit the data to obtain resistance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[35]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"start_idx = len(V)//2\ncoeffs = np.polyfit(I[start_idx:], V[start_idx:], 1)\nV_fit = coeffs[0]*I + coeffs[1]\nR = abs(coeffs[0])\n")),(0,r.kt)("p",null,"Fit the data after the index ",(0,r.kt)("inlineCode",{parentName:"p"},"start_idx"),", which is the start index of the approximately linear portion of the curve. A first-order polynomial fitting is performed on the V-I data. Then the coefficient of the first-order term is the device resistance."),(0,r.kt)("h5",{id:"3223-save-data-and-plots"},"3.2.2.3 Save data and plots"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[36]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'Rdata_folder = os.path.join(plot_path, project_name, "resistance")\nif not os.path.exists(Rdata_folder):\n    os.makedirs(Rdata_folder)\nRdata_file = os.path.join(Rdata_folder, "Rdata.dat")\nRdata_fig = os.path.join(Rdata_folder, "resistance.jpg")\n\nwith open(Rdata_file, "w") as fp:\n    fp.write("Resistance: " + f"{R} Ohm\\n")\n\nfontsize = 20\nlinewidth = 1\nplt.rcParams.update({"font.size": fontsize})\nfig, ax = plt.subplots()\nfig.set_size_inches(12, 8)\nax.plot(I, V, c="b", linewidth=linewidth, label="V-I")\nax.plot(I, V_fit, c="g", linewidth=linewidth, label="V_fit-I")\nax.set_xlabel("I[A]")\nax.set_ylabel("V[V]")\nplt.legend()\nplt.ticklabel_format(style="sci", scilimits=(-1, 2))\nax.grid()\nplt.savefig(Rdata_fig)\nplt.close()\n# endregion\n\nprint("\\x1b[6;30;42m" + "[Finished in %(t)s mins]" % {"t": round((time.time() - start)/60, 2)} + "\\x1b[0m")\n')),(0,r.kt)("h3",{id:"33-capacitance"},"3.3 Capacitance"),(0,r.kt)("p",null,"This section performs a SSAC simulation, and extracts the capacitance. The script is in the ",(0,r.kt)("inlineCode",{parentName:"p"},"VPD0A_C.py")," file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[37]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from VPD00_structure import *\nimport time\nimport os\nfrom pathlib import Path\n\n# region --- 0. General Parameters ---\ntcad_vmin = 0  # unit:Volt\ntcad_vmax = 3      # unit:Volt\ntcad_vstep = 0.5   # unit:Volt\n# endregion\n\nstart = time.time()\ntime_str = time.strftime("%Y%m%d_%H%M%S/", time.localtime())\nsimu_name = "VPD0A_C"\nproject_name = simu_name + "_" + run_mode + "_" + time_str\n\n# --- set path ---\nplot_path = str(Path(__file__).parent.as_posix()) + "/plots/"\nif not os.path.exists(plot_path):\n    os.makedirs(plot_path)\n\n# ----------------------   set project_path\nmaterial_property = "normal"\ngenrate_file_path = ""\n# --- Project from pd_structure.py ---\npj = pd_project(project_name, run_mode, material_property)\nst = pj.Structure()\n\nst.add_electrode(name="cathode", property={\n    "solid": "Cathode", "bc_mode": "steady_state",\n    "sweep_type": "range", "range_start": tcad_vmin, "range_stop": tcad_vmax, "range_interval": tcad_vstep, "apply_AC_small_signal": "All"})\nst.add_electrode(name="anode", property={\n    "solid": "Anode", "bc_mode": "steady_state",\n    "sweep_type": "single", "voltage": 0, "apply_AC_small_signal": "none"})\n\n# ----------------------   set simu\nsimu = pj.Simulation()\n\nsimu.add(name="oedevice", type="OEDevice", property={\n    "geometry": {"dimension": "2d_x_normal", "x": oe_x_mean, "x_span": oe_x_span, "y": oe_y_mean, "y_span": oe_y_span, "z_min": oe_z_min, "z_max": oe_z_max},\n    "genrate": {"genrate_path": genrate_file_path, "coordinate_unit": "m", "field_length_unit": "m", "source_fraction": source_fraction},\n    "general": {"norm_length": normal_length, "solver_mode": "SSAC", "simulation_temperature": temperature},\n    "small_signal_ac": {"frequency_spacing": "single", "frequency": 1e8},\n    # "small_signal_ac": {"frequency_spacing": "log", "log_start_frequency": 1e6, "log_stop_frequency": 1e10, "log_num_frequency_points": 3},\n    "advanced": {"non_linear_solver": "Newton", "linear_solver": "MUMPS", "max_iterations": 50}})\n\n# ----------------------   run\n# check license and print version before & after simulation.\nresult_device = simu["oedevice"].run()\n\n# ----------------------   extract\nresult_device.extract(data="C", electrode="cathode", export_csv=True, show=False, savepath=plot_path + project_name + "C")\n\nprint("\\x1b[6;30;42m" + "[Finished in %(t)s mins]" % {"t": round((time.time() - start)/60, 2)} + "\\x1b[0m")\n')),(0,r.kt)("p",null,"For ",(0,r.kt)("inlineCode",{parentName:"p"},"OEDevice")," solver, the detailed properties can be found in the appendix. Here:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"general"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"solver_mode"),"--It's set to ",(0,r.kt)("inlineCode",{parentName:"li"},'"SSAC"'),", which means a SSAC simulation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"small_signal_ac"),"--Set the frequency points",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"frequency_spacing"),"--It's set to ",(0,r.kt)("inlineCode",{parentName:"li"},'"single"'),", which means a single frequency point"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"frequency"),"--Set the value of the single frequency")))),(0,r.kt)("p",null,"For the electrode ",(0,r.kt)("inlineCode",{parentName:"p"},'"cathode"'),", a range of voltage from 0V to 3V is applied to it, with a step of 0.5V. ",(0,r.kt)("inlineCode",{parentName:"p"},"apply_AC_small_signal"),"--It's set to ",(0,r.kt)("inlineCode",{parentName:"p"},"All"),", which means the small signal analysis is applied at each voltage step"),(0,r.kt)("p",null,"For the result extraction:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"data"),"--It's set to ",(0,r.kt)("inlineCode",{parentName:"p"},'"C"'),", which is available after the SSAC simulation and is used to extract the capacitance"),(0,r.kt)("h3",{id:"34-optical-generation-rate"},"3.4 Optical generation rate"),(0,r.kt)("p",null,"This section performs a FDTD simulation to obtain the optical field profile in the structure of ",(0,r.kt)("inlineCode",{parentName:"p"},'"Ge"'),", and then calculate the photo-induced carrier generation rate. The average of the optical generation rate in the light propagating direction, which is the x-direction, is then taken to obtain the profile in the yz plane to be imported to the OEDevice simulation. The script is in the ",(0,r.kt)("inlineCode",{parentName:"p"},"VPD01_FDTD.py")," file."),(0,r.kt)("h4",{id:"341-import-simulation-toolkit"},"3.4.1 Import simulation toolkit"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[38]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from VPD00_structure import *\nimport time\nimport os\nfrom pathlib import Path\n")),(0,r.kt)("h4",{id:"342-set-general-parameters"},"3.4.2 Set general parameters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[39]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'start = time.time()\ntime_str = time.strftime("%Y%m%d_%H%M%S/", time.localtime())\n\n# ----------------------   set project_path\nsimu_name = "VPD01_FDTD"\nmaterial_property = "normal"\nproject_name = simu_name + "_" + run_mode + "_" + time_str\n\n# --- set path ---\nplot_path = str(Path(__file__).parent.as_posix()) + "/plots/"\ngenrate_file_folder = plot_path + project_name + "genrate"\nif not os.path.exists(plot_path):\n    os.makedirs(plot_path)\n')),(0,r.kt)("h4",{id:"343-create-a-new-project"},"3.4.3 Create a new project"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[40]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# --- Project from pd_structure.py ---\npj = pd_project(project_name, run_mode, material_property)\n")),(0,r.kt)("h4",{id:"344-add-the-solver"},"3.4.4 Add the solver"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[41]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# ----------------------   set simu\nsimu = pj.Simulation()\n\nsimu.add(name="fdtd", type="FDTD", property={\n    "general": {"simulation_time": 2000},\n    "mesh_settings": {"mesh_accuracy": {"cells_per_wavelength": cells_per_wavelength}}})\n\nsimu.add(name="afdtd", type="AFDTD", property={\n    "general": {"simulation_time": 2000},\n    "mesh_settings": {"mesh_accuracy": {"cells_per_wavelength": cells_per_wavelength}}})\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"AFDTD")," solver for active device simulation can be used to extract the optical generation rate, but can't export the optical field profile. And the usage of the ",(0,r.kt)("inlineCode",{parentName:"p"},"FDTD")," solver is exactly the opposite. Therefore, both solvers are added here to serve the different purposes."),(0,r.kt)("h4",{id:"345-simulate-and-extract-the-result"},"3.4.5 Simulate and extract the result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[42]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# --- Run ---\n# check license and print version before & after simulation.\n# result_fdtd = simu["fdtd"].run()\n\n# result_fdtd.extract(data="fdtd:power_monitor", monitor_name="y=0", savepath=plot_path + project_name + "E_y=0",\n#                     attribute="E", target="intensity", wavelength=str(wavelength_center), export_csv=True)\n\n# result_fdtd.extract(data="fdtd:power_monitor", monitor_name="z=0.47", savepath=plot_path + project_name + "E_z=0.47",\n#                     attribute="E", target="intensity", wavelength=str(wavelength_center), export_csv=True)\n\n\nresult_afdtd = simu["afdtd"].run()\nresult_genrate = result_afdtd.run_generation_rate_analysis(name="genrate", monitor="Power Monitor", average_dimension="x", light_power=1, \n                                                          coordinate_unit="m", field_length_unit="m")  # unit\uff1a m, cm, um, nm #average_dimension: x/y/z\nresult_genrate.extract(data="generation_rate", export_csv=True, show=False, log=False, savepath=genrate_file_folder)\nresult_genrate.extract(data="pabs_total", export_csv=True, show=False, log=False, savepath=genrate_file_folder)\n\n\nprint("\\x1b[6;30;42m" + "[Finished in %(t)s mins]" % {"t": round((time.time() - start)/60, 2)} + "\\x1b[0m")\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"run_generation_rate_analysis()")," parameters\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),"--Custom name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"monitor"),"--Name of the ",(0,r.kt)("inlineCode",{parentName:"li"},"power_monitor")," for calculating optical generation rate. The ",(0,r.kt)("inlineCode",{parentName:"li"},"power_monitor")," is required to be of 3D type"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"average_dimension"),"--Set the direction to take the average of the optical generate rate"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"light_power"),"--Set the power of the light source, measured in W. The optical generation rate will be scaled based on the power"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"coordinate_unit"),"--Set the coordinate unit in the optical generation rate file (gfile)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"field_length_unit"),"--Set the length unit in the generation rate unit in the optical generation rate file (gfile).  If it's set to ",(0,r.kt)("inlineCode",{parentName:"li"},'"m"'),", the generation rate unit in the gfile will be ",(0,r.kt)("inlineCode",{parentName:"li"},"/m^3/s"),". Similarly for the rest")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"result_genrate.extract()")," parameters\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data"),"--Type of the result",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"When ",(0,r.kt)("inlineCode",{parentName:"li"},"data")," is set to ",(0,r.kt)("inlineCode",{parentName:"li"},'"generation_rate"'),", besides an image file and a csv file, the result files also include a text file in ",(0,r.kt)("inlineCode",{parentName:"li"},".gfile")," format. The coordinate unit in the csv and the image file is ",(0,r.kt)("inlineCode",{parentName:"li"},"um"),", and the generation rate unit in the two files is ",(0,r.kt)("inlineCode",{parentName:"li"},"/cm^3/s"),". These units can't be modified when extracting the result. However, the units in the gfile are controlled by ",(0,r.kt)("inlineCode",{parentName:"li"},"coordinate_unit"),"\u3001",(0,r.kt)("inlineCode",{parentName:"li"},"field_length_unit"),". And only the gfile can be imported to the OEDevice solver"),(0,r.kt)("li",{parentName:"ul"},"When data is set to ",(0,r.kt)("inlineCode",{parentName:"li"},'"pabs_total"'),", the total absorption power is extracted"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"export_csv"),"--Whether to export csv file"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"show"),"--Whether to show the plot in a popup window"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"log"),"--Whether to apply a logarithmic normalization in the intensity plot"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"savepath"),"--The save path of the result extraction")),(0,r.kt)("h3",{id:"35-photo-current"},"3.5 Photo current"),(0,r.kt)("p",null,"This section imports the optical generation rate to the ",(0,r.kt)("inlineCode",{parentName:"p"},"OEDevice")," solver, and performs a steady state simulation to obtain the photo current. The script is in the ",(0,r.kt)("inlineCode",{parentName:"p"},"VPD02_Ip.py")," file."),(0,r.kt)("h4",{id:"351-import-simulation-toolkit"},"3.5.1 Import simulation toolkit"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[43]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from VPD00_structure import *\nimport time\nimport os\nfrom pathlib import Path\n")),(0,r.kt)("h4",{id:"352-set-general-parameters"},"3.5.2 Set general parameters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[44]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'start = time.time()\ntime_str = time.strftime("%Y%m%d_%H%M%S/", time.localtime())\n\n# region --- 0. General Parameters ---\ntcad_vmin = 0  # unit:Volt\ntcad_vmax = 4      # unit:Volt\ntcad_vstep = 0.5   # unit:Volt\n# endregion\n\n# ----------------------   set project_path\nsimu_name = "VPD02_Ip"\nproject_name = simu_name + "_" + run_mode + "_" + time_str\nmaterial_property = "normal"\ngenrate_file_folder = str(Path(__file__).parent.as_posix())\ngenrate_file_path = genrate_file_folder + "/VPD01_FDTD.gfile"\n\n# --- set path ---\nplot_path = str(Path(__file__).parent.as_posix()) + "/plots/"\nif not os.path.exists(plot_path):\n    os.makedirs(plot_path)\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"genrate_file_path")," is the absolute path of the gfile to be imported to the ",(0,r.kt)("inlineCode",{parentName:"p"},"OEDevice")," solver. Here it's set to the absolute path of ",(0,r.kt)("inlineCode",{parentName:"p"},"VPD01_FDTD.gfile")," in the same directory. And  this can be \u53ef\u66f4\u6539\u4e3a\u7531AFDTD\u4eff\u771f\u5e76\u63d0\u53d6\u5f97\u5230\u7684gfile\u6587\u4ef6\u8def\u5f84\u3002"),(0,r.kt)("h4",{id:"353-create-a-new-project"},"3.5.3 Create a new project"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[45]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# --- Project from pd_structure.py ---\npj = pd_project(project_name, run_mode, material_property)\n")),(0,r.kt)("h4",{id:"354-add-electrodes"},"3.5.4 Add electrodes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[46]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'st = pj.Structure()\n\nst.add_electrode(name="cathode", property={\n    "solid": "Cathode", "bc_mode": "steady_state", "sweep_type": "range",\n    "range_start": tcad_vmin, "range_stop": tcad_vmax, "range_interval": tcad_vstep, "apply_AC_small_signal": "none"})\nst.add_electrode(name="anode", property={\n    "solid": "Anode", "bc_mode": "steady_state",\n    "sweep_type": "single", "voltage": 0, "apply_AC_small_signal": "none"})\n')),(0,r.kt)("h4",{id:"355-\u6dfb\u52a0\u6c42\u89e3\u5668"},"3.5.5 \u6dfb\u52a0\u6c42\u89e3\u5668"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[47]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# ----------------------   set simu\nsimu = pj.Simulation()\n\nsimu.add(name="oedevice", type="OEDevice", property={\n    "geometry": {"dimension": "2d_x_normal", "x": oe_x_mean, "x_span": oe_x_span, "y": oe_y_mean, "y_span": oe_y_span, "z_min": oe_z_min, "z_max": oe_z_max},\n    "genrate": {"genrate_path": genrate_file_path, "coordinate_unit": "m", "field_length_unit": "m", "source_fraction": source_fraction},\n    "general": {"norm_length": normal_length, "solver_mode": "steady_state", "simulation_temperature": temperature},\n    "advanced": {"non_linear_solver": "Newton", "linear_solver": "MUMPS", "max_iterations": 50}})\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"genrate.genrate_path"),"\u4e0d\u4e3a\u7a7a\uff0c\u8868\u793a\u5bfc\u5165\u8be5\u8def\u5f84\u5bf9\u5e94\u7684gfile\u6587\u4ef6"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"genrate.coordinate_unit"),"\u8bbe\u7f6egfile\u6587\u4ef6\u4e2d\u5750\u6807\u7684\u5355\u4f4d"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"genrate.field_length_unit"),"\u8bbe\u7f6egfile\u6587\u4ef6\u4e2d\u751f\u6210\u7387\u5355\u4f4d\u4e2d\u7684\u957f\u5ea6\u5355\u4f4d"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"genrate.source_fraction"),"\u8bbe\u7f6e\u5149\u529f\u7387\u7684\u7f29\u653e\u56e0\u5b50\uff0c\u6c42\u89e3\u5668\u4f1a\u5148\u5c06\u5bfc\u5165\u7684\u751f\u6210\u7387\u4e58\u4ee5\u6b64\u56e0\u5b50\uff0c\u7136\u540e\u518d\u4ee3\u5165\u8f7d\u6d41\u5b50\u8f93\u8fd0\u65b9\u7a0b\u6c42\u89e3")),(0,r.kt)("h4",{id:"356-\u8fd0\u884c\u5e76\u63d0\u53d6\u7ed3\u679c"},"3.5.6 \u8fd0\u884c\u5e76\u63d0\u53d6\u7ed3\u679c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[48]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# --- Run ---\n# check license and print version before & after simulation.\nresult_device = simu["oedevice"].run()\n\n# --- Extract ---\nresult_device.extract(data="I", electrode="cathode", export_csv=True,\n                      show=False, savepath=plot_path + project_name + "IV_cathode")\n\nprint("\\x1b[6;30;42m" + "[Finished in %(t)s mins]" % {"t": round((time.time() - start)/60, 2)} + "\\x1b[0m")\n')),(0,r.kt)("h3",{id:"36-bandwidth"},"3.6 Bandwidth"),(0,r.kt)("p",null,"\u672c\u8282\u901a\u8fc7\u5bf9\u5149\u751f\u8f7d\u6d41\u5b50\u751f\u6210\u7387\u5e94\u7528\u77ac\u6001\u4eff\u771f\uff0c\u5f97\u5230\u5149\u7535\u6d41\u7684\u9636\u8dc3\u54cd\u5e94\uff0c\u518d\u901a\u8fc7\u540e\u5904\u7406\u5f97\u5230\u5668\u4ef6\u7684\u5e26\u5bbd\u7ed3\u679c\u3002"),(0,r.kt)("h4",{id:"361-\u5bfc\u5165\u4eff\u771f\u5de5\u5177\u5305"},"3.6.1 \u5bfc\u5165\u4eff\u771f\u5de5\u5177\u5305"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[49]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from VPD00_structure import *\nimport time\nimport os\nfrom pathlib import Path\nimport numpy as np\nfrom scipy import interpolate as scip, fft as scfft\nfrom matplotlib import pyplot as plt\n")),(0,r.kt)("h4",{id:"362-\u8bbe\u7f6e\u901a\u7528\u53c2\u6570"},"3.6.2 \u8bbe\u7f6e\u901a\u7528\u53c2\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[50]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'start = time.time()\ntime_str = time.strftime("%Y%m%d_%H%M%S/", time.localtime())\n\n# region --- 0. General Parameters ---\ntcad_vbias = 1       # the bias voltage on cathode\nsource_fraction = 1e-4   # the source generation rate is multiplied by this factor\n# endregion\n\n# ----------------------   set project_path\nsimu_name = "VPD03_bw"\nproject_name = simu_name + "_" + run_mode + "_" + time_str\nmaterial_property = "transient"\ngenrate_file_folder = str(Path(__file__).parent.as_posix())\ngenrate_file_path = genrate_file_folder + "/VPD01_FDTD.gfile"\n\n# --- set path ---\nplot_path = str(Path(__file__).parent.as_posix()) + "/plots/"\nif not os.path.exists(plot_path):\n    os.makedirs(plot_path)\n')),(0,r.kt)("h4",{id:"363-\u521b\u5efa\u4eff\u771f\u5de5\u7a0b"},"3.6.3 \u521b\u5efa\u4eff\u771f\u5de5\u7a0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[51]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# --- Project from pd_structure.py ---\npj = pd_project(project_name, run_mode, material_property)\n")),(0,r.kt)("h4",{id:"364-\u6dfb\u52a0\u7535\u6781"},"3.6.4 \u6dfb\u52a0\u7535\u6781"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[52]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'st = pj.Structure()\n\nst.add_electrode(name="cathode", property={\n    "solid": "Cathode", "bc_mode": "transient", "voltage": tcad_vbias, "v_step_max": 0.5,\n    "time_table": [{"time_start": 0, "time_stop": 2e-12, "initial_step": 1e-12, "max_step": 5e-12},\n                   {"time_start": 2e-12, "time_stop": 2.001e-12, "initial_step": 30e-18, "max_step": 30e-18,\n                    "optical": {"enabled": 1, "envelop": 0, "source_fraction": source_fraction}},\n                   {"time_start": 2.001e-12, "time_stop": 2.01e-12, "initial_step": 30e-18, "max_step": 60e-18,\n                    "optical": {"enabled": 1, "envelop": 0, "source_fraction": source_fraction}},\n                   {"time_start": 2.01e-12, "time_stop": 2.03e-12, "initial_step": 60e-18, "max_step": 2e-15,\n                    "optical": {"enabled": 1, "envelop": 0, "source_fraction": source_fraction}},\n                   {"time_start": 2.03e-12, "time_stop": 10e-12, "initial_step": 2e-15, "max_step": 50e-15,\n                    "optical": {"enabled": 1, "envelop": 0, "source_fraction": source_fraction}},\n                   {"time_start": 10e-12, "time_stop": 500e-12, "initial_step": 50e-15, "max_step": 10e-12,\n                    "optical": {"enabled": 1, "envelop": 0, "source_fraction": source_fraction}}]})\n\nst.add_electrode(name="anode", property={\n    "solid": "Anode", "bc_mode": "steady_state",\n    "sweep_type": "single", "voltage": 0, "apply_AC_small_signal": "none"})\n')),(0,r.kt)("p",null,"\u5728",(0,r.kt)("inlineCode",{parentName:"p"},'"cathode"'),"\u7535\u6781\u5904\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"bc_mode"),"\u8bbe\u7f6e\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},'"transient"'),"\uff0c\u8868\u793a\u5728\u6b64\u7535\u6781\u5e94\u7528\u77ac\u6001\u8fb9\u754c\u6761\u4ef6\uff0c\u7136\u540e\u53ef\u8bbe\u7f6e\u5149\u751f\u8f7d\u6d41\u5b50\u751f\u6210\u7387\u968f\u65f6\u95f4\u7684\u53d8\u5316"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"voltage"),"\u8bbe\u7f6e\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},"tcad_vbias"),"\uff0c\u5176\u503c\u4e3a1\uff0c\u5373\u8868\u793a\u5148\u5728\u8be5\u7535\u6781\u65bd\u52a01V\u504f\u538b\uff0c\u5e76\u8fdb\u884c\u7a33\u6001\u4eff\u771f\uff0c\u7136\u540e\u5728\u6b64\u7a33\u6001\u4eff\u771f\u7684\u57fa\u7840\u4e0a\u518d\u8fdb\u884c\u77ac\u6001\u4eff\u771f\u3002\u7a33\u6001\u4eff\u771f\u65f6\u4e0d\u5e94\u7528\u5149\u751f\u8f7d\u6d41\u5b50\u751f\u6210\u7387"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"v_step_max"),"\u8bbe\u7f6e\u4e3a0.5\uff0c\u8868\u793a\u4ece\u5e73\u8861\u6001\u81f3\u504f\u538b\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},"voltage"),"\u7684\u7a33\u6001\u8ba1\u7b97\u65f6\u7684\u7535\u538b\u6b65\u957f\u6700\u5927\u503c\u4e3a0.5V"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"time_table"),"\u4e3a\u5149\u751f\u8f7d\u6d41\u5b50\u751f\u6210\u7387\u968f\u65f6\u95f4\u7684\u53d8\u5316\u5217\u8868\uff1a",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"time_start"),"--\u8be5\u65f6\u95f4\u6bb5\u7684\u8d77\u59cb\u65f6\u95f4\u70b9\uff0c\u4e3a0\u65f6\u5373\u4e3a\u4e0a\u8ff0\u7a33\u6001\u7ed3\u679c\u7684\u72b6\u6001"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"time_stop"),"--\u8be5\u65f6\u95f4\u6bb5\u7684\u7ec8\u6b62\u65f6\u95f4\u70b9"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"initial_step"),"--\u8be5\u65f6\u95f4\u6bb5\u5185\u8d77\u59cb\u65f6\u95f4\u6b65\u957f"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"max_step"),"--\u8be5\u65f6\u95f4\u6bb5\u5185\u6700\u5927\u65f6\u95f4\u6b65\u957f"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"optical"),"--\u8be5\u65f6\u95f4\u6bb5\u5185\u7684\u5149\u751f\u8f7d\u6d41\u5b50\u751f\u6210\u7387\u7684\u76f8\u5173\u8bbe\u7f6e",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"enabled"),"--\u8be5\u65f6\u95f4\u6bb5\u5185\u662f\u5426\u5e94\u7528\u5149\u751f\u8f7d\u6d41\u5b50\u751f\u6210\u7387\uff0c\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},"1"),"\u8868\u793a\u5e94\u7528\uff0c\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},"0"),"\u8868\u793a\u4e0d\u5e94\u7528"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"envelop"),"--\u8be5\u65f6\u95f4\u6bb5\u5185\u5149\u529f\u7387\u7f29\u653e\u56e0\u5b50\u7684\u5305\u7edc\u66f2\u7ebf\uff0c\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},"0"),"\u8868\u793a\u5e38\u6570\u5305\u7edc"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"source_fraction"),"--\u5f53",(0,r.kt)("inlineCode",{parentName:"li"},"envelop"),"\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},"0"),"\u65f6\uff0c\u5373\u8868\u793a\u8be5\u65f6\u95f4\u6bb5\u5185\u5149\u529f\u7387\u7684\u7f29\u653e\u56e0\u5b50")))))),(0,r.kt)("h4",{id:"365-\u6dfb\u52a0\u6c42\u89e3\u5668"},"3.6.5 \u6dfb\u52a0\u6c42\u89e3\u5668"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[53]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# ----------------------   set simu\nsimu = pj.Simulation()\n\nsimu.add(name="oedevice", type="OEDevice", property={\n    "geometry": {"dimension": "2d_x_normal", "x": oe_x_mean, "x_span": oe_x_span, "y": oe_y_mean, "y_span": oe_y_span, "z_min": oe_z_min, "z_max": oe_z_max},\n    "genrate": {"genrate_path": genrate_file_path, "coordinate_unit": "m", "field_length_unit": "m", "source_fraction": 0},\n    "general": {"norm_length": normal_length, "solver_mode": "transient", "simulation_temperature": temperature},\n    "advanced": {"non_linear_solver": "Newton", "linear_solver": "MUMPS", "use_global_max_iterations": False, "poisson_max_iterations": 50, "ddm_max_iterations": 20,\n                 "use_quasi_fermi": "enabled", "damping": "potential", "potential_update": 2, "relative_tolerance": 1e-5, "tolerance_relax": 1e7}})\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"genrate.solver_mode"),"\u8bbe\u7f6e\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},'"transient"'),"\uff0c\u8868\u793a\u8fdb\u884c\u77ac\u6001\u4eff\u771f"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"advanced.use_global_max_iterations"),"\u8bbe\u7f6e\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},"False"),"\uff0c\u8868\u793a\u521d\u59cb\u5316\u6c42\u89e3\u6cca\u677e\u65b9\u7a0b\u65f6\uff0c\u4e0e\u540e\u7eed\u8fed\u4ee3\u6c42\u89e3\u6f02\u79fb\u6269\u6563\u65b9\u7a0b\u53ca\u6cca\u677e\u65b9\u7a0b\u7ec4\u65f6\uff0c\u5e94\u7528\u4e0d\u540c\u7684\u6700\u5927\u8fed\u4ee3\u6b21\u6570"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"advanced.poisson_max_iterations"),"\uff0c\u8868\u793a\u521d\u59cb\u5316\u6c42\u89e3\u6cca\u677e\u65b9\u7a0b\u65f6\u7684\u6700\u5927\u8fed\u4ee3\u6b21\u6570"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"advanced.ddm_max_iterations"),"\uff0c\u8868\u793a\u540e\u7eed\u8fed\u4ee3\u6c42\u89e3\u6f02\u79fb\u6269\u6563\u65b9\u7a0b\u53ca\u6cca\u677e\u65b9\u7a0b\u7ec4\u65f6\u7684\u6700\u5927\u8fed\u4ee3\u6b21\u6570"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"advanced.use_quasi_fermi"),"\u8bbe\u7f6e\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},'"enabled"'),"\uff0c\u8868\u793a\u5c06\u51c6\u8d39\u7c73\u80fd\u4f5c\u4e3a\u76f4\u63a5\u6c42\u89e3\u53d8\u91cf\uff0c\u800c\u975e\u4f7f\u7528\u8f7d\u6d41\u5b50\u6d53\u5ea6"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"advanced.damping"),"\u8bbe\u7f6e\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},'"potential"'),"\uff0c\u8868\u793a\u8bbe\u7f6e\u975e\u7ebf\u6027\u66f4\u65b0\u963b\u5c3c\u65b9\u6848\u4e3a\u4f9d\u636e\u7535\u52bf\u5224\u65ad"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"advanced.potential_update"),"\uff0c\u8868\u793a\u7535\u52bf\u963b\u5c3c\u7684\u9608\u503c\uff0c\u8fd9\u4e2a\u503c\u8d8a\u5927\uff0c\u963b\u5c3c\u6548\u5e94\u8d8a\u5c0f"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"advanced.relative_tolerance"),"\uff0c\u8868\u793a\u76f8\u5bf9\u6536\u655b\u5224\u636e\u7684\u5bb9\u5dee"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"advanced.tolerance_relax"),"\uff0c\u8868\u793a\u5224\u65ad\u6536\u655b\u65f6\uff0c\u5bf9\u7edd\u5bf9\u6536\u655b\u5224\u636e\u653e\u5bbd\u7684\u7cfb\u6570")),(0,r.kt)("h4",{id:"366-\u8fd0\u884c\u6c42\u89e3\u5668"},"3.6.6 \u8fd0\u884c\u6c42\u89e3\u5668"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[54]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# --- Run ---\n# check license and print version before & after simulation.\nresult_device = simu["oedevice"].run()\n')),(0,r.kt)("h4",{id:"367-\u7ed3\u679c\u63d0\u53d6"},"3.6.7 \u7ed3\u679c\u63d0\u53d6"),(0,r.kt)("p",null,"\u672c\u8282\u63d0\u53d6I-t\u66f2\u7ebf\uff0c\u7531\u4e8e\u5149\u529f\u7387\u7684\u65f6\u95f4\u51fd\u6570\u4e3a\u9636\u8dc3\u51fd\u6570\uff0c\u6240\u4ee5\u6b64\u5904\u662f\u9636\u8dc3\u54cd\u5e94\u7535\u6d41\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[55]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# --- Extract ---\nIt_file_folder = plot_path + project_name + "I"\nresult_device.extract(data="I", electrode="cathode", show=False, export_csv=True, savepath=It_file_folder)\n# result_device.extract(data="In", electrode="cathode", show=False, export_csv=True, savepath=plot_path + project_name + "In")\n# result_device.extract(data="Ip", electrode="cathode", show=False, export_csv=True, savepath=plot_path + project_name + "Ip")\n')),(0,r.kt)("h4",{id:"368-\u540e\u5904\u7406"},"3.6.8 \u540e\u5904\u7406"),(0,r.kt)("p",null,"\u672c\u8282\u901a\u8fc7\u5bf9\u9636\u8dc3\u54cd\u5e94\u6c42\u5bfc\uff0c\u5f97\u5230\u8109\u51b2\u54cd\u5e94\u3002\u7136\u540e\u5bf9\u8109\u51b2\u54cd\u5e94\u5e94\u7528\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u5f97\u5230\u9891\u7387\u54cd\u5e94\uff0c\u4ece\u800c\u83b7\u5f97\u5668\u4ef6\u5e26\u5bbd\u3002"),(0,r.kt)("h5",{id:"\u83b7\u5f97\u8109\u51b2\u54cd\u5e94"},"\u83b7\u5f97\u8109\u51b2\u54cd\u5e94"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[56]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# region Calculate 3dB bandwidth\nIt_file = os.path.join(It_file_folder, "0_I_Real.csv")\nfor i in range(10):\n    It_file = os.path.join(It_file_folder, str(i) + "_I_Real.csv")\n    if os.path.exists(It_file):\n        break\nrawdata = np.genfromtxt(It_file, skip_header=3, delimiter=\',\')\nI = rawdata[:,1]\nt = rawdata[:,0]*1e-15\n\nstart_idx = 2\nt = t[start_idx:]\nI = I[start_idx:]\n\n# Calculate impulse response dI/dt from step response I(t)\n# Impulse response at t[i] is the average of dI[i-1]/dt[i-1] and dI[i]/dt[i] \ndt = np.diff(t)\ndI = np.diff(I)\ndIdt = (dI[1:] + (dt[1:]/dt[:-1])**2*dI[:-1])/(dt[1:]*(1+dt[1:]/dt[:-1]))\ndelta_t = 1e-13\nth = t[1:len(t)-1]\nnt = int(np.ceil((th[-1]-th[0])/delta_t))\nt_interp = np.linspace(th[0], th[-1], nt)\ninterp1d_func = scip.interp1d(th, dIdt)\ndIdt_interp = interp1d_func(t_interp)\n')),(0,r.kt)("p",null,"\u5148\u5bf9\u9636\u8dc3\u54cd\u5e94\u6c42\u5bfc\uff0c\u5f97\u5230\u8109\u51b2\u54cd\u5e94\uff0c\u4e4b\u540e\u518d\u5bf9\u65f6\u95f4\u53d6\u5747\u5300\u95f4\u9694\uff0c\u5e76\u63d2\u503c\u5904\u7406\uff0c\u65b9\u4fbf\u540e\u7eed\u5e94\u7528\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362\u3002"),(0,r.kt)("h5",{id:"\u8f93\u51fa\u8109\u51b2\u54cd\u5e94\u7ed3\u679c"},"\u8f93\u51fa\u8109\u51b2\u54cd\u5e94\u7ed3\u679c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[57]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# Output impulse response\nbandwidth_folder = str(Path(It_file_folder).parent.as_posix()) + "/3dB_bandwidth"\nif not os.path.exists(bandwidth_folder):\n    os.makedirs(bandwidth_folder)\nimpulse_fig = os.path.join(bandwidth_folder, "impulse_response.jpg")\nfontsize = 20\nlinewidth = 1\nplt.rcParams.update({"font.size": fontsize})\nfig, ax = plt.subplots()\nfig.set_size_inches(12, 8)\nax.plot(t_interp*1e12, dIdt_interp/np.max(np.abs(dIdt_interp)), c=\'b\', linewidth=linewidth, label="Impulse response")\nax.set_ylabel("Impulse response")\nax.set_xlabel("Time [ps]")\nax.grid()\nplt.legend()\nplt.ticklabel_format(style=\'sci\', scilimits=(-1,2))\nplt.savefig(impulse_fig)\nplt.close()\n')),(0,r.kt)("h5",{id:"\u83b7\u5f97\u9891\u7387\u54cd\u5e94"},"\u83b7\u5f97\u9891\u7387\u54cd\u5e94"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[58]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"fresponse = scfft.rfft(dIdt_interp)\nfreq = scfft.rfftfreq(len(t_interp), t_interp[1]-t_interp[0])\nfresponse = np.abs(fresponse)/np.max(np.abs(fresponse))\n\n# Calculate 3dB bandwidth by interpolation\nlog_freq = np.log10(freq[1:])\nlog_fresp = 20*np.log10(np.abs(fresponse[1:]))\nresp_3dB = -3\n\nlog_freq_3dB = scip.interp1d(log_fresp, log_freq)(resp_3dB)\n\nbandwidth_GHz = 10**log_freq_3dB*1e-9\n")),(0,r.kt)("p",null,"\u901a\u8fc7\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362\u5f97\u5230\u9891\u7387\u54cd\u5e94\uff0c\u5e76\u901a\u8fc7\u63d2\u503c\u5f97\u51fa3dB\u5e26\u5bbd\u3002"),(0,r.kt)("h5",{id:"\u8f93\u51fa\u9891\u7387\u54cd\u5e94\u7ed3\u679c"},"\u8f93\u51fa\u9891\u7387\u54cd\u5e94\u7ed3\u679c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[59]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'bandwidth_file = os.path.join(bandwidth_folder, "3dB_bandwidth.txt")\nbandwidth_fig = os.path.join(bandwidth_folder, "3dB_bandwidth.jpg")\n\nwith open(bandwidth_file, \'w\') as fp:\n    fp.write("3dB bandwidth: " + f"{bandwidth_GHz:.6f} GHz\\n")\n\nfig, ax = plt.subplots()\nfig.set_size_inches(12, 8)\nax.plot(freq[1:]*1e-9, 20*np.log10(np.abs(fresponse[1:])), \'b\', linewidth=linewidth, label="Normalized response")\nax.plot(freq[1:]*1e-9, resp_3dB*np.ones(len(freq[1:])), \'g\', linewidth=linewidth)\nax.set_xlim(left = 1, right = 300)\nax.set_ylim(bottom = -25)\nax.set_xscale(\'log\')\nax.set_ylabel(\'Normalized response [dB]\')\nax.set_xlabel(\'Frequency [GHz]\')\nax.grid(which=\'both\', axis=\'both\')\nplt.savefig(bandwidth_fig)\n# endregion\n\nprint("\\x1b[6;30;42m" + "[Finished in %(t)s mins]" % {"t": round((time.time() - start)/60, 2)} + "\\x1b[0m")\n')),(0,r.kt)("h3",{id:"37-saturation-power"},"3.7 Saturation Power"),(0,r.kt)("p",null,"\u672c\u8282\u5229\u7528python\u7279\u6027\uff0c\u5bf9\u8f93\u5165\u5149\u529f\u7387\u8fdb\u884c\u626b\u63cf\uff0c\u5f97\u5230I-P\u66f2\u7ebf\uff0c\u4ece\u800c\u5927\u81f4\u5224\u65ad\u9971\u548c\u5149\u529f\u7387\u3002"),(0,r.kt)("h4",{id:"371-\u5bfc\u5165\u4eff\u771f\u5de5\u5177\u5305"},"3.7.1 \u5bfc\u5165\u4eff\u771f\u5de5\u5177\u5305"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[60]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from VPD00_structure import *\nimport time\nimport os\nfrom pathlib import Path\nimport numpy as np\nfrom matplotlib import pyplot as plt\n")),(0,r.kt)("h4",{id:"372-\u8bbe\u7f6e\u901a\u7528\u53c2\u6570"},"3.7.2 \u8bbe\u7f6e\u901a\u7528\u53c2\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[61]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# region --- 0. General Parameters ---\nsweep_parameter_name = "source_fraction"\nsweep_value_table = np.linspace(0.001, 0.02, 20)\nvbias = 1  # unit:Volt, voltage on cathode\n# endregion\n\nstart = time.time()\ntime_str = time.strftime("%Y%m%d_%H%M%S/", time.localtime())\n\n# --- set path ---\nplot_path = str(Path(__file__).parent.as_posix()) + "/plots/"\nif not os.path.exists(plot_path):\n    os.makedirs(plot_path)\n\nsimu_name = "VPD04_Psat"\nmaterial_property = "normal"\ngenrate_file_folder = str(Path(__file__).parent.as_posix())\ngenrate_file_path = genrate_file_folder + "/VPD01_FDTD.gfile"\n')),(0,r.kt)("h4",{id:"373-\u5b9a\u4e49\u626b\u63cf\u51fd\u6570"},"3.7.3 \u5b9a\u4e49\u626b\u63cf\u51fd\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[62]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def sweep_simulation(sweep_value):\n")),(0,r.kt)("h4",{id:"374-\u8bbe\u7f6e\u626b\u63cf\u53c2\u6570"},"3.7.4 \u8bbe\u7f6e\u626b\u63cf\u53c2\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[63]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    # ----------------------   set sweep parameter\n    if not sweep_parameter_name in globals():\n        raise Exception(f"Parameter {sweep_parameter_name} not found!")\n    exec(f"global {sweep_parameter_name}; {sweep_parameter_name} = sweep_value")\n\n')),(0,r.kt)("p",null,"\u5229\u7528python\u7279\u6027\uff0c\u5c06\u540e\u7eed\u4f7f\u7528\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"sweep_parameter_name"),"\u5bf9\u5e94\u53c2\u6570",(0,r.kt)("inlineCode",{parentName:"p"},"source_fraction"),"\u7684\u503c\uff0c\u6c42\u6539\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"sweep_value"),"\u7684\u503c\u3002"),(0,r.kt)("h4",{id:"375-\u521b\u5efa\u4eff\u771f\u5de5\u7a0b"},"3.7.5 \u521b\u5efa\u4eff\u771f\u5de5\u7a0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[64]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    # ----------------------   set project_path\n    project_name = simu_name + "_" + run_mode + "_" + time_str + sweep_parameter_name + "_" + str(sweep_value) + "/"\n\n    # --- Project from pd_structure.py ---\n    pj = pd_project(project_name, run_mode, material_property)\n')),(0,r.kt)("h4",{id:"376-\u6dfb\u52a0\u70b9\u51fb"},"3.7.6 \u6dfb\u52a0\u70b9\u51fb"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[65]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    st = pj.Structure()\n\n    st.add_electrode(name="cathode", property={\n        "solid": "Cathode", "bc_mode": "steady_state",\n        "sweep_type": "single", "voltage": vbias, "apply_AC_small_signal": "none"})\n    st.add_electrode(name="anode", property={\n        "solid": "Anode", "bc_mode": "steady_state",\n        "sweep_type": "single", "voltage": 0, "apply_AC_small_signal": "none"})\n')),(0,r.kt)("p",null,"\u5728",(0,r.kt)("inlineCode",{parentName:"p"},'"cathode"'),"\u7535\u6781\u65bd\u52a01V\u504f\u538b\uff0c\u8fdb\u884c\u7a33\u6001\u4eff\u771f\u3002"),(0,r.kt)("h4",{id:"377-\u6dfb\u52a0\u6c42\u89e3\u5668"},"3.7.7 \u6dfb\u52a0\u6c42\u89e3\u5668"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[66]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    # ----------------------   set simu\n    simu = pj.Simulation()\n\n    simu.add(name="oedevice", type="OEDevice", property={\n        "geometry": {"dimension": "2d_x_normal", "x": oe_x_mean, "x_span": oe_x_span, "y": oe_y_mean, "y_span": oe_y_span, "z_min": oe_z_min, "z_max": oe_z_max},\n        "genrate": {"genrate_path": genrate_file_path, "coordinate_unit": "m", "field_length_unit": "m", "source_fraction": source_fraction},\n        "general": {"norm_length": normal_length, "solver_mode": "steady_state", "simulation_temperature": temperature},\n        "advanced": {"non_linear_solver": "Newton", "linear_solver": "MUMPS", "max_iterations": 50}})\n\n')),(0,r.kt)("h3",{id:"378-\u8fd0\u884c\u6c42\u89e3\u5668"},"3.7.8 \u8fd0\u884c\u6c42\u89e3\u5668"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[67]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    # --- Run ---\n    # check license and print version before & after simulation.\n    result_device = simu["oedevice"].run()\n')),(0,r.kt)("h4",{id:"379-\u8fd4\u56de\u7535\u6d41\u7ed3\u679c"},"3.7.9 \u8fd4\u56de\u7535\u6d41\u7ed3\u679c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[68]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'    # --- Extract ---\n    IV_file_folder = plot_path + project_name + "IV_cathode"\n    result_device.extract(data="I", electrode="cathode", export_csv=True,\n                        show=False, savepath=IV_file_folder)\n    \n    IV_file = os.path.join(IV_file_folder, "0_I_Real.csv")\n    for i in range(10):\n        IV_file = os.path.join(IV_file_folder, str(i) + "_I_Real.csv")\n        if os.path.exists(IV_file):\n            break\n    \n    data = np.genfromtxt(IV_file, skip_header=3, delimiter=\',\')\n\n    return data\n')),(0,r.kt)("h4",{id:"3710-\u8fd0\u884c\u626b\u63cf\u51fd\u6570\u5e76\u8f93\u51fa\u7ed3\u679c"},"3.7.10 \u8fd0\u884c\u626b\u63cf\u51fd\u6570\u5e76\u8f93\u51fa\u7ed3\u679c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[69]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# region --- sweep result postprocess ---\nfontsize = 20\nlinewidth = 1\nsweep_parameter_label = sweep_parameter_name\nsweep_parameter_unit = ""\n\nIsweep = []\nvoltages = np.zeros(0)\nfor sweep_value in sweep_value_table:\n    data = sweep_simulation(sweep_value)\n    if len(data.shape) == 1:\n        data = data.reshape((1, len(data)))\n    voltages = data[:,0]\n    Isweep.append(data[:, 1])\n\nIsweep_folder = os.path.join(plot_path, simu_name + "_" + run_mode + "_" + time_str + "Isweep")\nif not os.path.exists(Isweep_folder):\n    os.makedirs(Isweep_folder)\n\nIsweep = np.array(Isweep)\nsweep_value_table = np.array(sweep_value_table)\n\nplt.rcParams.update({"font.size": fontsize})\nfor i in range(len(voltages)):\n    Isweep_fig = os.path.join(Isweep_folder, "Isweep_" + str(voltages[i]) + "V.jpg")\n    Isweep_file = os.path.join(Isweep_folder, "Isweep_" + str(voltages[i]) + "V.csv")\n    Iresp = Isweep[:,i]\n\n    with open(Isweep_file, "w") as fp:\n        fp.write(f"Vbias={voltages[i]}V,\\n")\n        fp.write(f"{sweep_parameter_name}" + (f"[{sweep_parameter_unit}]" if sweep_parameter_unit else "") + ",Current[A]\\n")\n        for j in range(len(Iresp)):\n            fp.write(f"{sweep_value_table[j]:.15e},{Iresp[j]:.15e}\\n")\n\n    fig, ax = plt.subplots()\n    fig.set_size_inches(12, 8)\n    ax.plot(sweep_value_table, Iresp, c=\'b\', linewidth=0.5, label=f"Vbias={voltages[i]}V")\n    ax.plot(sweep_value_table, Iresp, \'bo\')\n    ax.set_ylabel("I[A]")\n    ax.set_xlabel(f"{sweep_parameter_name}" + (f"[{sweep_parameter_unit}]" if sweep_parameter_unit else ""))\n    plt.legend()\n    plt.ticklabel_format(style="sci", scilimits=(-1, 2))\n    ax.grid()\n    plt.savefig(Isweep_fig)\n    plt.close()\n\n# endregion\n\nprint("\\x1b[6;30;42m" + "[Finished in %(t)s mins]" % {"t": round((time.time() - start)/60, 2)} + "\\x1b[0m")\n')),(0,r.kt)("h1",{id:"4-\u9644\u5f55"},"4. \u9644\u5f55"),(0,r.kt)("h2",{id:"41-\u7535\u5b66\u6750\u6599\u53c2\u6570"},"4.1 \u7535\u5b66\u6750\u6599\u53c2\u6570"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"VPD_material.py"),"\u811a\u672c\u4e2d\u7684\u6750\u6599\u53c2\u6570\u8bbe\u7f6e\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[70]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'elec_Si_properties = {"basic": {"model": "Default",\n                                "Default": {"affinity": 4.59-1.11452/2.0, "permitti": 11.7}, "print": 1},\n                      "mobility": {"model": "Masetti",\n                                   "Masetti": {"mu_min2_h": 44.9, "mumax_e": 1471, "mumax_h": 470.5, "pc_h": 0}, "print": 1},\n                      "band": {"model": "Default",\n                               "Default": {\n                                   # DOS\n                                   "dos_formula": 2, "nc300": 3.21657e19, "nv300": 1.82868e19,\n                                   # Bandgap\n                                   "eg0": 1.16, "chi0": 4.59-1.16/2,\n                                   # Bandgap Narrowing\n                                   "bgn_model": "OldSlotboom", "e0_bgn_oldslotboom": 0.0045, "n0_bgn_oldslotboom": 1.00e17, "deg0_oldslotboom": 0,\n                                   # Auger Recombination\n                                   "augan": 2.8e-31, "augap": 9.9e-32, "augbn": 0, "augbp": 0, "augcn": 0, "augcp": 0, "aughn": 0, "aughp": 0,\n                                   # SRH Recombination\n                                   "taunmax": 1.5e-9, "taupmax": 1.5e-9, "nsrh_n": 7.1e15, "nsrh_p": 7.1e15, "nc_f": 1.5, "nv_f": 1.5,\n                                   # Radiative Recombination\n                                   "c_direct": 1.6e-14}, "print": 1}}\nelec_Ge_properties = {"model": {"high_field": False},\n                      "basic": {"model": "Default",\n                                "Default": {"affinity": 4.5-0.65969/2.0, "permitti": 16.0}, "print": 1},\n                      "mobility": {"model": "Analytic",\n                                   "Analytic": {"alphan": 0.56, "alphap": 1.0, "mun_max": 3900, "mun_min": 850, "mup_max": 1800, "mup_min": 300,\n                                                "nrefn": 2.6e17, "nrefp": 1e17, "nun": -1.66, "nup": -2.33}, "print": 1},\n                      "band": {"model": "Default",\n                               "Default": {\n                                   # DOS\n                                   "nc300": 1.0516e19, "nv300": 3.9189e+18,\n                                   # Bandgap\n                                   "eg300": 0.65969, "chi300": 4.5-0.65969/2.0,\n                                   # Bandgap Narrowing\n                                   "v0_bgn": 0,\n                                   # Auger Recombination\n                                   "augan": 1e-30, "augap": 1e-30, "augbn": 0, "augbp": 0, "augcn": 0, "augcp": 0, "aughn": 0, "aughp": 0,\n                                   # SRH Recombination\n                                   "taunmax": 1.5e-9, "taupmax": 1.5e-9, "nsrhn": 7.1e15, "nsrhp": 7.1e15,\n                                   # Radiative Recombination\n                                   "c_direct": 6.41e-14}, "print": 1}}\nelec_Ge_properties_for_transient = {"model": {"high_field": True, "mobility_force": "EQF"},\n                                    "basic": {"model": "Default",\n                                              "Default": {"affinity": 4.5-0.65969/2.0, "permitti": 16.0}, "print": 1},\n                                    "mobility": {"model": "Masetti",\n                                                 "Masetti": {"pc_e": 0, "mu_min1_e": 850, "mu_min2_e": 850, "mu1_e": 0, "mumax_e": 3900,\n                                                             "cr_e": 2.6e17, "alpha_e": 0.56, "pc_h": 0, "mu_min1_h": 300,\n                                                             "mu_min2_h": 300, "mu1_h": 0, "mumax_h": 1800, "cr_h": 1e17, "alpha_h": 1}, "print": 1},\n                                    "band": {"model": "Default",\n                                             "Default": {\n                                                 # DOS\n                                                 "nc300": 1.1372e+19, "nv300": 3.9189e+18,\n                                                 # Bandgap\n                                                 "eg300": 0.65969, "chi300": 4.5-0.65969/2.0,\n                                                 # Bandgap Narrowing\n                                                 "v0_bgn": 0,\n                                                 # Auger Recombination\n                                                 "augan": 1e-30, "augap": 1e-30, "augbn": 0, "augbp": 0, "augcn": 0, "augcp": 0, "aughn": 0, "aughp": 0,\n                                                 # SRH Recombination\n                                                 "taunmax": 1.5e-9, "taupmax": 1.5e-9, "nsrhn": 7.1e15, "nsrhp": 7.1e15,\n                                                 # Radiative Recombination\n                                                 "c_direct": 6.41e-14}, "print": 1},\n                                    "vsat": {"model": "Canali",\n                                             "Canali": {"beta0n": 2, "beta0p": 1, "betaexpn": 0, "betaexpp": 0, "alpha": 0, "vsatn0": 6e6, "vsatp0": 5.4e6,\n                                                        "vsatn_exp": 0, "vsatp_exp": 0}, "print": 1}}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"basic"),"--\u8bbe\u7f6e\u4ecb\u7535\u5e38\u6570\u3001\u7535\u5b50\u4eb2\u548c\u80fd"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"band"),"--\u8bbe\u7f6e\u80fd\u5e26\u3001\u590d\u5408\u6a21\u578b\u53ca\u53c2\u6570"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"mobility"),"--\u8bbe\u7f6e\u8fc1\u79fb\u7387\u6a21\u578b\u53ca\u53c2\u6570"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"model"),"--\u8bbe\u7f6e\u5f3a\u573a\u8fc1\u79fb\u7387\u3001\u8d39\u7c73\u7edf\u8ba1\u7b49\u6a21\u578b\u7684\u5f00\u5173"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"vsat"),"--\u8bbe\u7f6e\u901f\u5ea6\u9971\u548c\u6a21\u578b\u53ca\u53c2\u6570"),(0,r.kt)("p",null,"\u5177\u4f53\u7684\u6750\u6599\u8bbe\u7f6e\u8bf4\u660e\u8bf7\u53c2\u8003\u624b\u518c",(0,r.kt)("inlineCode",{parentName:"p"},"examples/active_demo/Physics_Model_in_OEDevice.pdf"),"\u3002"),(0,r.kt)("h2",{id:"42-oedevice\u8bbe\u7f6e"},"4.2 OEDevice\u8bbe\u7f6e"),(0,r.kt)("p",null,"OEDevice\u7684\u5c5e\u6027\u5217\u8868\uff1a"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"},"default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.norm_length"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1.0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.solver_mode"),(0,r.kt)("td",{parentName:"tr",align:"left"},"steady_state"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['steady_state', 'transient', 'SSAC']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.temperature_dependence"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Isothermal"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['Isothermal']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"general.simulation_temperature"),(0,r.kt)("td",{parentName:"tr",align:"left"},"300"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"advanced.non_linear_solver"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Newton"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['Newton']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"advanced.linear_solver"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MUMPS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['MUMPS', 'LU', 'BCGS']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"advanced.use_quasi_fermi"),(0,r.kt)("td",{parentName:"tr",align:"left"},"disabled"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['disabled', 'enabled']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"advanced.damping"),(0,r.kt)("td",{parentName:"tr",align:"left"},"none"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['none', 'potential']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"advanced.potential_update"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1.0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"advanced.multi_threads"),(0,r.kt)("td",{parentName:"tr",align:"left"},"let_solver_choose"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['let_solver_choose', 'set_thread_count']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"advanced.thread_count"),(0,r.kt)("td",{parentName:"tr",align:"left"},"4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"advanced.max_iterations"),(0,r.kt)("td",{parentName:"tr",align:"left"},"30"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"advanced.use_global_max_iterations"),(0,r.kt)("td",{parentName:"tr",align:"left"},"true"),(0,r.kt)("td",{parentName:"tr",align:"left"},"bool"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"advanced.poisson_max_iterations"),(0,r.kt)("td",{parentName:"tr",align:"left"},"30"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"advanced.ddm_max_iterations"),(0,r.kt)("td",{parentName:"tr",align:"left"},"30"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"advanced.relative_tolerance"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1.0e-5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"advanced.tolerance_relax"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1.0e+5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"advanced.divergence_factor"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1.0e+25"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"genrate.genrate_path"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"genrate.source_fraction"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"genrate.coordinate_unit"),(0,r.kt)("td",{parentName:"tr",align:"left"},"m"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['m', 'cm', 'um', 'nm']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"genrate.field_length_unit"),(0,r.kt)("td",{parentName:"tr",align:"left"},"m"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['m', 'cm', 'um', 'nm']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.dimension"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2d_x_normal"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['2d_x_normal', '2d_y_normal', '2d_z_normal']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.x_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.y_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_span"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_min"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"geometry.z_max"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"small_signal_ac.perturbation_amplitude"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0.001"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"small_signal_ac.frequency_spacing"),(0,r.kt)("td",{parentName:"tr",align:"left"},"single"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['single', 'linear', 'log']",".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"small_signal_ac.frequency"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1.0e+6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"small_signal_ac.start_frequency"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1.0e+06"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"small_signal_ac.stop_frequency"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1.0e+09"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"small_signal_ac.frequency_interval"),(0,r.kt)("td",{parentName:"tr",align:"left"},"9.9999e+10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"small_signal_ac.num_frequency_points"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"small_signal_ac.log_start_frequency"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1.0e+06"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"small_signal_ac.log_stop_frequency"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1.0e+10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"float"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"small_signal_ac.log_num_frequency_points"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"left"})))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"geometry"),"\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dimension"),"--\u8bbe\u7f6e\u4eff\u771f\u533a\u57df\u7ef4\u5ea6\uff0c\u76ee\u524d\u4ec5\u652f\u6301\u4e8c\u7ef4\u4eff\u771f\u3002\u5f53\u8bbe\u7f6e\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},"2d_x_normal"),"\u65f6\uff0c\u8868\u793ayz\u5e73\u9762\u7684\u4eff\u771f\uff0c\u5176\u4f59\u540c\u7406")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"general"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"norm_length"),"--\u8bbe\u7f6e\u5668\u4ef6\u7b2c\u4e09\u7ef4\u5c3a\u5bf8\uff0c\u9ed8\u8ba4\u4e3a1"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"solver_mode"),"--\u8bbe\u7f6e\u4eff\u771f\u6a21\u5f0f\uff0c\u652f\u6301\u7a33\u6001\u3001\u77ac\u6001\u3001\u5c0f\u4fe1\u53f7\u4eff\u771f"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"temperature"),"--\u8bbe\u7f6e\u4eff\u771f\u6e29\u5ea6"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"temperature_dependence"),"--\u8bbe\u7f6e\u6e29\u5ea6\u4f9d\u8d56\u7c7b\u578b\uff0c\u76ee\u524d\u4ec5\u652f\u6301\u5747\u5300\u6e29\u5ea6")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"genrate"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"genrate_path"),"--\u8bbe\u7f6e\u5149\u751f\u8f7d\u6d41\u5b50\u751f\u6210\u7387\u5206\u5e03\u6587\u4ef6\uff08gfile\uff09\u7684\u8def\u5f84\u3002\u9ed8\u8ba4\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},'""'),"\uff0c\u5373\u4e3a\u7a7a\uff0c\u6b64\u65f6\u4e0d\u5bfc\u5165\u5149\u751f\u8f7d\u6d41\u5b50\uff0c",(0,r.kt)("inlineCode",{parentName:"li"},"genrate"),"\u5176\u5b83\u8bbe\u7f6e\u9879\u65e0\u6548\uff1b\u5f53\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5219\u5bfc\u5165\u8be5gfile\u4e2d\u7684\u5149\u751f\u8f7d\u6d41\u5b50\u751f\u6210\u7387\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"coordinate_unit"),"--gfile\u6587\u4ef6\u4e2d\u5750\u6807\u7684\u5355\u4f4d"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"field_length_unit"),"--gfile\u6587\u4ef6\u4e2d\u751f\u6210\u7387\u5355\u4f4d\u4e2d\u7684\u957f\u5ea6\u5355\u4f4d"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"source_fraction"),"--\u5149\u529f\u7387\u7684\u7f29\u653e\u56e0\u5b50\uff0c\u6c42\u89e3\u5668\u4f1a\u5148\u5c06\u5bfc\u5165\u7684\u751f\u6210\u7387\u4e58\u4ee5\u6b64\u56e0\u5b50\uff0c\u7136\u540e\u518d\u4ee3\u5165\u8f7d\u6d41\u5b50\u8f93\u8fd0\u65b9\u7a0b\u6c42\u89e3")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"small_signal_ac"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"perturbation_amplitude"),"--\u5c0f\u4fe1\u53f7\u7684\u7535\u538b\u5e45\u503c")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"frequency_spacing"),"--\u5c0f\u4fe1\u53f7\u9891\u7387\u7684\u95f4\u9694\u65b9\u5f0f"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},'"single"'),"\uff0c\u9891\u7387\u4e3a\u5355\u70b9"),(0,r.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},'"linear"'),"\uff0c\u9891\u7387\u4e3a\u7ebf\u6027\u5747\u5300\u53d6\u70b9"),(0,r.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},'"log"'),"\uff0c\u5148\u5bf9\u9891\u7387\u53d6\u5bf9\u6570\uff0c\u518d\u5747\u5300\u53d6\u70b9"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"frequency"),"--\u5355\u70b9\u9891\u7387\u5bf9\u5e94\u7684\u503c")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"start_frequency"),"--\u7ebf\u6027\u53d6\u70b9\u9891\u7387\u7684\u8d77\u59cb\u503c")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"stop_frequency"),"--\u7ebf\u6027\u53d6\u70b9\u9891\u7387\u7684\u7ec8\u6b62\u503c")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"frequency_interval"),"--\u7ebf\u6027\u53d6\u70b9\u9891\u7387\u7684\u95f4\u9694")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"num_frequency_points"),"--\u7ebf\u6027\u53d6\u70b9\u9891\u7387\u7684\u70b9\u6570")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"log_start_frequency"),"--\u5bf9\u6570\u53d6\u70b9\u9891\u7387\u7684\u8d77\u59cb\u503c")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"log_stop_frequency"),"--\u5bf9\u6570\u53d6\u70b9\u9891\u7387\u7684\u7ec8\u6b62\u503c")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"log_num_frequency_points"),"--\u5bf9\u6570\u53d6\u70b9\u9891\u7387\u7684\u70b9\u6570"))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"advanced"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"non_linear_solver"),"--\u975e\u7ebf\u6027\u6c42\u89e3\u5668\u7c7b\u578b\uff0c\u76ee\u524d\u4ec5\u652f\u6301\u725b\u987f\u6cd5"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"linear_solver"),"--\u7ebf\u6027\u6c42\u89e3\u5668\u7c7b\u578b\uff0c\u53ef\u9009",(0,r.kt)("inlineCode",{parentName:"li"},'"MUMPS"'),"\uff0c",(0,r.kt)("inlineCode",{parentName:"li"},'"LU"'),"\uff0c",(0,r.kt)("inlineCode",{parentName:"li"},'"BCGS"'),"\u3002\u5176\u4e2d",(0,r.kt)("inlineCode",{parentName:"li"},'"MUMPS"'),"\u4e0e",(0,r.kt)("inlineCode",{parentName:"li"},'"LU"'),"\u4e3a\u76f4\u63a5\u6c42\u89e3\u65b9\u6cd5\uff0c\u524d\u8005\u652f\u6301\u5e76\u884c\u8ba1\u7b97\uff0c\u800c\u540e\u8005\u4e0d\u652f\u6301\uff1b",(0,r.kt)("inlineCode",{parentName:"li"},'"BCGS"'),"\u4e3a\u8fed\u4ee3\u6c42\u89e3\u65b9\u6cd5\uff0c\u652f\u6301\u5e76\u884c\u8ba1\u7b97"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"use_quasi_fermi"),"--\u662f\u5426\u5c06\u51c6\u8d39\u7c73\u80fd\u800c\u975e\u8f7d\u6d41\u5b50\u6d53\u5ea6\u4f5c\u4e3a\u76f4\u63a5\u6c42\u89e3\u53d8\u91cf"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"damping"),"--\u9009\u62e9\u975e\u7ebf\u6027\u66f4\u65b0\u963b\u5c3c\u65b9\u6848"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"potential_update"),"--\u7535\u52bf\u963b\u5c3c\u7684\u9608\u503c\uff0c\u8fd9\u4e2a\u503c\u8d8a\u5927\uff0c\u963b\u5c3c\u6548\u5e94\u8d8a\u5c0f"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"multi_threads"),"--\u591a\u7ebf\u7a0b\u8bbe\u7f6e",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},'"let_solver_choose"'),"\u65f6\uff0c\u7531\u6c42\u89e3\u5668\u81ea\u52a8\u8bbe\u7f6e\u7ebf\u7a0b\u6570\uff0c\u9ed8\u8ba4\u6700\u5927\u7ebf\u7a0b\u6570\u4e3a4"),(0,r.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e\u4e3a",(0,r.kt)("inlineCode",{parentName:"li"},'"set_thread_count"'),"\uff0c\u7531\u7528\u6237\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6570"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"thread_count"),"--\u7528\u6237\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6570"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"max_iterations"),"--\u5168\u5c40\u6700\u5927\u8fed\u4ee3\u6b21\u6570"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"use_global_max_iterations"),"--\u521d\u59cb\u5316\u6c42\u89e3\u6cca\u677e\u65b9\u7a0b\u65f6\uff0c\u4e0e\u540e\u7eed\u8fed\u4ee3\u6c42\u89e3\u6f02\u79fb\u6269\u6563\u65b9\u7a0b\u53ca\u6cca\u677e\u65b9\u7a0b\u7ec4\u65f6\uff0c\u662f\u5426\u5e94\u7528\u5168\u5c40\u6700\u5927\u8fed\u4ee3\u6b21\u6570"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"poisson_max_iterations"),"--\u521d\u59cb\u5316\u6c42\u89e3\u6cca\u677e\u65b9\u7a0b\u65f6\u7684\u6700\u5927\u8fed\u4ee3\u6b21\u6570"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ddm_max_iterations"),"--\u540e\u7eed\u8fed\u4ee3\u6c42\u89e3\u6f02\u79fb\u6269\u6563\u65b9\u7a0b\u53ca\u6cca\u677e\u65b9\u7a0b\u7ec4\u65f6\u7684\u6700\u5927\u8fed\u4ee3\u6b21\u6570"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"relative_tolerance"),"--\u76f8\u5bf9\u6536\u655b\u5224\u636e\u7684\u5bb9\u5dee"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tolerance_relax"),"--\u5224\u65ad\u6536\u655b\u65f6\uff0c\u5bf9\u7edd\u5bf9\u6536\u655b\u5224\u636e\u653e\u5bbd\u7684\u7cfb\u6570"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"divergence_factor"),"--\u5224\u65ad\u53d1\u6563\u65f6\uff0c\u5bf9\u7edd\u5bf9\u6536\u655b\u5224\u636e\u4e58\u7684\u7cfb\u6570")))}_.isMDXComponent=!0},6775:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image01-2799b3c79372f21c95129e73ab32f324.jpg"},8520:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image02-337b17f5327a18b686a8f408b87bbb86.png"},999:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/image03-7eb2acd0220c600db38a11933011ad5b.png"}}]);