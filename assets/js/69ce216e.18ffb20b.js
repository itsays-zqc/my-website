"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6646],{3905:(t,e,a)=>{a.d(e,{Zo:()=>p,kt:()=>k});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var d=r.createContext({}),m=function(t){var e=r.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},p=function(t){var e=m(t.components);return r.createElement(d.Provider,{value:e},t.children)},s="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},g=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,i=t.originalType,d=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),s=m(a),g=n,k=s["".concat(d,".").concat(g)]||s[g]||c[g]||i;return a?r.createElement(k,l(l({ref:e},p),{},{components:a})):r.createElement(k,l({ref:e},p))}));function k(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=a.length,l=new Array(i);l[0]=g;var o={};for(var d in e)hasOwnProperty.call(e,d)&&(o[d]=e[d]);o.originalType=t,o[s]="string"==typeof t?t:n,l[1]=o;for(var m=2;m<i;m++)l[m]=a[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}g.displayName="MDXCreateElement"},4858:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var r=a(87462),n=(a(67294),a(3905));const i={},l="Material",o={unversionedId:"test/SDK/1Material",id:"test/SDK/1Material",title:"Material",description:"Use Material() to instance a material into the project, use addnondispersion, adddispersion and addanisotropy functoin to add new materials or use addlib utilize materials from the material library.",source:"@site/docs/test/SDK/1Material.md",sourceDirName:"test/SDK",slug:"/test/SDK/1Material",permalink:"/my-website/docs/test/SDK/1Material",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/test/SDK/1Material.md",tags:[],version:"current",frontMatter:{},sidebar:"testSidebar",previous:{title:"Max-Optics SDK",permalink:"/my-website/docs/category/max-optics-sdk"},next:{title:"Structure",permalink:"/my-website/docs/test/SDK/2Structure"}},d={},m=[{value:"1.1 Add nondispersion material",id:"11-add-nondispersion-material",level:2},{value:"1.2 Add dispersion material",id:"12-add-dispersion-material",level:2},{value:"1.3 Add anisotropy material",id:"13-add-anisotropy-material",level:2},{value:"1.4 Add material from the material library",id:"14-add-material-from-the-material-library",level:2}],p={toc:m},s="wrapper";function c(t){let{components:e,...a}=t;return(0,n.kt)(s,(0,r.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"material"},"Material"),(0,n.kt)("font",{face:"Calibri"},(0,n.kt)("div",{class:"text-justify"},(0,n.kt)("p",null,"Use ",(0,n.kt)("inlineCode",{parentName:"p"},"Material()")," to instance a material into the project, use ",(0,n.kt)("inlineCode",{parentName:"p"},"add_nondispersion"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"add_dispersion")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"add_anisotropy")," functoin to add new materials or use ",(0,n.kt)("inlineCode",{parentName:"p"},"add_lib")," utilize materials from the material library."),(0,n.kt)("h2",{id:"11-add-nondispersion-material"},"1.1 Add nondispersion material"),(0,n.kt)("p",null,"The syntax and properties of adding non dispersive material are shown below. This function does not return any data."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"add_nondispersion(\n        self,\n        *,\n        name: str,\n        data: List[Tuple[float, float]],\n        order: int = 2,\n        color: Optional[str] = None      \n    )\n")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"name"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Define the name of the material.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"data"),(0,n.kt)("td",{parentName:"tr",align:"center"},"tuple"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Input a tuple, format is ","[(index real, index imag)]")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"order"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Priority of the material, with larger number indicating higher priority.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"color"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},'Set the color for material display, format is "#RRGGBB" .')))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:"),'\nThe following command adds non dispersive material to the material of the instance, sets the material name to "SiO2", data to ',"[(1.444, 0)]",', mesh order to 1 and color to "#654321".'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'mt = Project.Material()\nmt.add_nondispersion(name="SiO2", data=[(1.444, 0)], order=1,color="#654321")\n'))),(0,n.kt)("h2",{id:"12-add-dispersion-material"},"1.2 Add dispersion material"),(0,n.kt)("p",null,"The syntax and properties of adding dispersive material are shown below. This function does not return any data."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"add_dispersion(\n            self,\n            *,\n            name: str,\n            data: List[Tuple[float, float, float]],\n            order: int = 2,\n            color: Optional[str] = None\n        )\n")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Define the name of the material.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"data"),(0,n.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A list of tuple, format is ","[(wavelength, index real, index imag), ...]")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"order"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Indicates the priority of the material, with higher numbers indicating higher priority.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Define the name of the material.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"data"),(0,n.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A list of tuple, format is ","[(wavelength, index real, index imag), ...]")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"order"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Priority of the material, with larger number indicating higher priority.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"color"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},'Set the color for material display, format is "#RRGGBB" .')))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("p",null,'The following command adds dispersive material to the material of the instance, sets the material name to "SiO2", data to ',"[(1.55e-06,, 1.444, 0), (1.30e-06, 1.81, 0.227)]",', mesh order to 2 and color to "#654321".'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'mt = pj.Material()\nmt.add_dispersion(name="SiO2",\n    data=[(1.55e-06, 1.444, 0), (1.30e-06, 1.81, 0.227)], order=2, color="#654321"\n    )\n')),(0,n.kt)("h2",{id:"13-add-anisotropy-material"},"1.3 Add anisotropy material"),(0,n.kt)("p",null,"The syntax and properties of adding non anisotropy material are shown below. This function does not return any data."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"add_anisotropy(\n            self,\n            *,\n            name: str,\n            data: Union[List],\n            order: int = 2,\n            color: Optional[str] = None,\n   )\n")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Define the name of the material.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"data"),(0,n.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A list of tuple, format is ","[(wavelength, xx index real, xx index imag, yy index real, yy index imag, zz index real, zz index imag), ...]")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"order"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Priority of the material, with larger number indicating higher priority.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"color"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},'Set the color for material display, format is "#RRGGBB" .')))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:"),'\nThe following command adds anisotropy material to the material of the instance, sets the material name to "LN", data to ',"[(wavelength * 1e-6, 2.211, 0, 2.138, 0, 2.211, 0)]"," and mesh order to 2."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'mt = pj.Material()\nmt.add_anisotropy(name="LN", \n      data=[(wavelength * 1e-6, 2.211, 0, 2.138, 0, 2.211, 0)], order=2\n      )\n')),(0,n.kt)("h2",{id:"14-add-material-from-the-material-library"},"1.4 Add material from the material library"),(0,n.kt)("p",null,"The syntax and properties of adding material from material library are shown below. This function does not return any data."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"add_lib(\n        self,\n        *,\n        name: str,\n        data: Any,\n        order: int = 2\n    )\n")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Define the name of the material.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"data"),(0,n.kt)("td",{parentName:"tr",align:"left"},"object"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A library material object, format is mo.Material.Air")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"order"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Priority of the material, with larger number indicating higher priority.")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("p",null,'The following command adds material from material library to the material of the instance, sets the material name to "Air", data to mo.Material.Air and mesh order to 2.'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'mt = Project.Material()\nmt.add_lib(name="Air", data=mo.Material.Air, order=2)\n\n'))))}c.isMDXComponent=!0}}]);