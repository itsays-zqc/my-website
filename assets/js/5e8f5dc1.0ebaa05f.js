"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5126],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>c});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function m(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var p=r.createContext({}),o=function(t){var e=r.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},d=function(t){var e=o(t.components);return r.createElement(p.Provider,{value:e},t.children)},s="mdxType",g={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},k=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,p=t.parentName,d=m(t,["components","mdxType","originalType","parentName"]),s=o(a),k=n,c=s["".concat(p,".").concat(k)]||s[k]||g[k]||l;return a?r.createElement(c,i(i({ref:e},d),{},{components:a})):r.createElement(c,i({ref:e},d))}));function c(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=k;var m={};for(var p in e)hasOwnProperty.call(e,p)&&(m[p]=e[p]);m.originalType=t,m[s]="string"==typeof t?t:n,i[1]=m;for(var o=2;o<l;o++)i[o]=a[o];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}k.displayName="MDXCreateElement"},3054:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>m,toc:()=>o});var r=a(7462),n=(a(7294),a(3905));const l={},i="Simulation",m={unversionedId:"test/SDK/6Simulation",id:"test/SDK/6Simulation",title:"Simulation",description:"Our platform offer support for a variety of simulation modules, encompassing both optical and electrical simulation. These may include FDE, EME, FDTD, OEDevice modules, ensuring an expansive electro-optical simulation capabilities.",source:"@site/docs/test/SDK/6Simulation.md",sourceDirName:"test/SDK",slug:"/test/SDK/6Simulation",permalink:"/my-website/docs/test/SDK/6Simulation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/test/SDK/6Simulation.md",tags:[],version:"current",frontMatter:{},sidebar:"testSidebar",previous:{title:"Monitor",permalink:"/my-website/docs/test/SDK/5Mornitor"},next:{title:"Preview",permalink:"/my-website/docs/test/SDK/7Preview"}},p={},o=[{value:"6.1 FDE",id:"61-fde",level:2},{value:"General",id:"general",level:3},{value:"Geometry properties",id:"geometry-properties",level:4},{value:"Mesh setting",id:"mesh-setting",level:4},{value:"Boundary conditions",id:"boundary-conditions",level:4},{value:"6.2 EME",id:"62-eme",level:2},{value:"General",id:"general-1",level:3},{value:"Geometry properties",id:"geometry-properties-1",level:3},{value:"Background material",id:"background-material",level:3},{value:"EME setup",id:"eme-setup",level:4},{value:"Transverse mesh setting",id:"transverse-mesh-setting",level:3},{value:"Boundary conditions",id:"boundary-conditions-1",level:3},{value:"6.3 FDTD",id:"63-fdtd",level:2},{value:"General",id:"general-2",level:3},{value:"Geometry",id:"geometry",level:3},{value:"Mesh settings",id:"mesh-settings",level:3},{value:"Boundary conditions",id:"boundary-conditions-2",level:3},{value:"6.4 FDESweep",id:"64-fdesweep",level:2},{value:"Simulation name",id:"simulation-name",level:3},{value:"Sweep type",id:"sweep-type",level:3},{value:"Parameters",id:"parameters",level:3},{value:"result",id:"result",level:3},{value:"6.5 EMESweep",id:"65-emesweep",level:2},{value:"6.6 FDTDSweep",id:"66-fdtdsweep",level:2},{value:"6.7 FDTDSmatrix",id:"67-fdtdsmatrix",level:2},{value:"6.5 OEDevice",id:"65-oedevice",level:2},{value:"6.6 AFDTD",id:"66-afdtd",level:2},{value:"6.7 AFDE",id:"67-afde",level:2},{value:"3.1 Boundary",id:"31-boundary",level:2}],d={toc:o},s="wrapper";function g(t){let{components:e,...a}=t;return(0,n.kt)(s,(0,r.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"simulation"},"Simulation"),(0,n.kt)("font",{face:"Calibri"},(0,n.kt)("div",{class:"text-justify"},(0,n.kt)("p",null,"Our platform offer support for a variety of simulation modules, encompassing both optical and electrical simulation. These may include FDE, EME, FDTD, OEDevice modules, ensuring an expansive electro-optical simulation capabilities."),(0,n.kt)("p",null,"Use ",(0,n.kt)("inlineCode",{parentName:"p"},"Simulation()")," to instance a simulation into the project, and then use ",(0,n.kt)("inlineCode",{parentName:"p"},"add")," function to add simulation solver. The types of solvers available include 'FDE', 'EME', 'FDTD', 'FDTDSmatrix', 'FDTDSweep', 'EMESweep', and 'FDESweep'."),(0,n.kt)("h2",{id:"61-fde"},"6.1 FDE"),(0,n.kt)("p",null,"The syntax for adding a finite difference eigenmode (FDE) solver to the project and its properties settings are as follows. When adding a FDE solver, it is assumed that the project has already been added, and the pj is an instance of the project. The ",(0,n.kt)("inlineCode",{parentName:"p"},"add")," function does not return any data."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu = pj.Simulation()\nsimu.add(        \n        name: str,\n        type: "FDE",\n        property: dict\n    )\n')),(0,n.kt)("h3",{id:"general"},"General"),(0,n.kt)("p",null,"| general.solver_type                                    | string  | 2d_x_normal      | Selections are ","['2d_x_normal','2d_y_normal','2d_z_normal', 'x_y_prop', 'x_z_prop', 'y_x_prop', 'y_z_prop', 'z_x_prop', 'z_y_prop']","|"),(0,n.kt)("h4",{id:"geometry-properties"},"Geometry properties"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"x, y, z"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"The center position of the geometry.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"x_span, y_span, z_span"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"X span, Y span and Z span of the geometry.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"x_min, x_max"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"X min, X max position of the geometry.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"y_min, y_max"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Y min, Y max position of the geometry.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"z_min, z_max"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Z min, Z max position of the geometry.")))),(0,n.kt)("p",null,"| background_material                                    | object  |-                  | Select a material object                                                                                                          |\n| refractive_index                                       | number  | 1                | If not selecting a material, the refractive index is required                                                                     |"),(0,n.kt)("h4",{id:"mesh-setting"},"Mesh setting"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"mesh_type"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"uniform"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['uniform']")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"mesh_accuracy.cells_per_wavelength"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"15"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"mesh_step_settings.dx"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"mesh_step_settings.dy"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"mesh_step_settings.dz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"mesh_refinement.mesh_refinement"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"curve_mesh"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['curve_mesh', 'staircase']")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"grading.grading"),(0,n.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,n.kt)("td",{parentName:"tr",align:"center"},"True"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"grading.grading_factor"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"global_mesh_uniform_grid.dx"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.02"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"global_mesh_uniform_grid.dy"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.02"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"global_mesh_uniform_grid.dz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.02"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"minimum_mesh_step_settings.min_mesh_step"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.0001"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"mesh_factor"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"mesh_grading.grading_factor"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.2"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")))),(0,n.kt)("p",null,"| thread_setting.thread                                  | integer | 4                |                                                                                                                                   |"),(0,n.kt)("h4",{id:"boundary-conditions"},"Boundary conditions"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description")))),(0,n.kt)("p",null,"|  x min bc                           | string  | PEC              | Selections are ","['PEC','PMC', 'PML', 'symmetric', 'anti_symmetric', 'periodic']","                                                    |\n|  x max bc                           | string  | PEC              | Selections are ","['PEC','PMC', 'PML', 'periodic']","                                                                                   |\n|  y min bc                           | string  | PEC              | Selections are ","['PEC','PMC', 'PML', 'symmetric', 'anti_symmetric', 'periodic']","                                                    |\n|  y max bc                           | string  | PEC              | Selections are ","['PEC','PMC', 'PML', 'periodic']","                                                                                   |\n|  z min bc                           | string  | PEC              | Selections are ","['PEC','PMC', 'PML', 'symmetric', 'anti_symmetric', 'periodic']","                                                    |\n|  z max bc                           | string  | PEC              | Selections are ","['PEC','PMC', 'PML', 'periodic']","                                                                                   |"),(0,n.kt)("p",null,"|  pml_settings.pml_kappa             | number  | 2                | A float, or a parameter, or a parameter expression that evaluates to a float                                                      |\n|  pml_settings.pml_sigma             | number  | 5                | A float, or a parameter, or a parameter expression that evaluates to a float                                                      |\n|  pml_settings.pml_layer             | integer | 12               |                                                                                                                                   |\n|  pml_settings.pml_polynomial        | integer | 3                |                                                                                                                                   |"),(0,n.kt)("p",null,"| mode_removal.threshold                                 | number  |-                 | A float, or a parameter, or a parameter expression that evaluates to a float                                                      |"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("p",null,"The following script adds a FDE solver for the xy plane, sets its dimension and mesh of the simulation area, and run the solver. "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu_name = "FDE_solver"\nsimu = Project.Simulation() \nsimu.add(name=simu_name, type="FDE",\n             property={"general": {"solver_type": "2d_z_normal"},\n                       "geometry": {"x": 0, "x_span": 3, "y": 0, "y_span": 3, "z": 0, "z_span": 0},\n                       "mesh_settings": {"global_mesh_uniform_grid": {"dx": 0.02, "dy": 0.02}}})\nsimu_res = simu[simu_name].run()\n')),(0,n.kt)("h2",{id:"62-eme"},"6.2 EME"),(0,n.kt)("p",null,"The syntax for adding an eigenmode expansion (EME) solver to the project and its properties settings are as follows. When adding an EME solver, it is assumed that the project has already been added, and the pj is an instance of the project. The ",(0,n.kt)("inlineCode",{parentName:"p"},"add")," function does not return any data."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu = pj.Simulation()\nsimu.add(        \n        name: str,\n        type: "EME",\n        property: dict\n    )\n')),(0,n.kt)("h3",{id:"general-1"},"General"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"wavelength"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"wavelength offset"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.002"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"use wavelength sweep"),(0,n.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,n.kt)("td",{parentName:"tr",align:"center"},"False"),(0,n.kt)("td",{parentName:"tr",align:"left"})))),(0,n.kt)("h3",{id:"geometry-properties-1"},"Geometry properties"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"geometry.x"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")))),(0,n.kt)("h3",{id:"background-material"},"Background material"),(0,n.kt)("p",null,"| background_material                                                                                  | string  |                  | Select a material object                                                     |\n| refractive_index                                                                                     | number  | 1                | If not selecting a material, the refractive index is required                |"),(0,n.kt)("h4",{id:"eme-setup"},"EME setup"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"cell_geometry.number_of_modes_for_all_cell_group"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"20"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"cell_geometry.allow_custom_eigensolver_settings"),(0,n.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,n.kt)("td",{parentName:"tr",align:"center"},"False"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"cell_geometry.display_groups"),(0,n.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,n.kt)("td",{parentName:"tr",align:"center"},"False"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"cell_geometry.display_cells"),(0,n.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,n.kt)("td",{parentName:"tr",align:"center"},"False"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"cell_geometry.cell_group_definition.","[span]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"cell_geometry.cell_group_definition.","[cell_number]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"5"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"cell_geometry.cell_group_definition.","[number_of_modes]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"10"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"cell_geometry.cell_group_definition.","[sc]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"none"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['none', 'sub_cell']")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"cell_geometry.cell_group_definition.","[search]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"max_index"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"cell_geometry.cell_group_definition.","[custom_settings_for_cell_group.bent_location]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"0: Simulation Center")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"cell_geometry.cell_group_definition.","[custom_settings_for_cell_group.bent_orientation]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"cell_geometry.cell_group_definition.","[custom_settings_for_cell_group.bent_radius]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"cell_geometry.cell_group_definition.","[custom_settings_for_cell_group.bent_waveguide]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,n.kt)("td",{parentName:"tr",align:"center"},"False"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"cell_geometry.cell_group_definition.","[custom_settings_for_cell_group.name]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"cellGroup"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"cell_geometry.cell_group_definition.","[custom_settings_for_cell_group.calculate_group_index]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,n.kt)("td",{parentName:"tr",align:"center"},"False"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"cell_geometry.cell_group_definition.","[custom_settings_for_cell_group.n]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")))),(0,n.kt)("h3",{id:"transverse-mesh-setting"},"Transverse mesh setting"),(0,n.kt)("p",null,"|transverse_mesh_setting.global_mesh_uniform_grid.dx                                                  | number  | 0.02             | A float, or a parameter, or a parameter expression that evaluates to a float |\n| transverse_mesh_setting.global_mesh_uniform_grid.dy                                                  | number  | 0.02             | A float, or a parameter, or a parameter expression that evaluates to a float |\n| transverse_mesh_setting.global_mesh_uniform_grid.dz                                                  | number  | 0.02             | A float, or a parameter, or a parameter expression that evaluates to a float |\n| transverse_mesh_setting.minimum_mesh_step_settings.min_mesh_step                                     | number  | 0.0001           | A float, or a parameter, or a parameter expression that evaluates to a float |\n| transverse_mesh_setting.mesh_grading.grading_factor                                                  | number  | 1.2              | A float, or a parameter, or a parameter expression that evaluates to a float |\n| mesh_settings.mesh_type                                                                              | string  | uniform          | Selections are ","['uniform']","                                                   |\n| mesh_settings.mesh_accuracy.cells_per_wavelength                                                     | integer | 15               |                                                                              |\n| mesh_settings.mesh_step_settings.dx                                                                  | number  | 0.1              | A float, or a parameter, or a parameter expression that evaluates to a float |\n| mesh_settings.mesh_step_settings.dy                                                                  | number  | 0.1              | A float, or a parameter, or a parameter expression that evaluates to a float |\n| mesh_settings.mesh_step_settings.dz                                                                  | number  | 0.1              | A float, or a parameter, or a parameter expression that evaluates to a float |\n| mesh_settings.mesh_refinement.mesh_refinement                                                        | string  | curve_mesh       | Selections are ","['curve_mesh', 'staircase']","                                   |\n| mesh_settings.grading.grading                                                                        | boolean | True             |                                                                              |\n| mesh_settings.grading.grading_factor                                                                 | number  | 1.2              | A float, or a parameter, or a parameter expression that evaluates to a float |\n| mesh_settings.global_mesh_uniform_grid.dx                                                            | number  | 0.02             | A float, or a parameter, or a parameter expression that evaluates to a float |\n| mesh_settings.global_mesh_uniform_grid.dy                                                            | number  | 0.02             | A float, or a parameter, or a parameter expression that evaluates to a float |\n| mesh_settings.global_mesh_uniform_grid.dz                                                            | number  | 0.02             | A float, or a parameter, or a parameter expression that evaluates to a float |\n| mesh_settings.minimum_mesh_step_settings.min_mesh_step                                               | number  | 0.0001           | A float, or a parameter, or a parameter expression that evaluates to a float |\n| mesh_settings.mesh_factor                                                                            | number  | 1.2              | A float, or a parameter, or a parameter expression that evaluates to a float |\n| mesh_settings.mesh_grading.grading_factor                                                            | number  | 1.2              | A float, or a parameter, or a parameter expression that evaluates to a float |"),(0,n.kt)("h3",{id:"boundary-conditions-1"},"Boundary conditions"),(0,n.kt)("p",null,"| boundary_conditions.y_min_bc                                                                         | string  | PEC              | Selections are ","['PEC','PMC', 'PML', 'symmetric', 'anti_symmetric', 'periodic']","|\n| boundary_conditions.y_max_bc                                                                         | string  | PEC              | Selections are ","['PEC','PMC', 'PML', 'periodic']","                              |\n| boundary_conditions.z_min_bc                                                                         | string  | PEC              | Selections are ","['PEC','PMC', 'PML', 'symmetric', 'anti_symmetric', 'periodic']","|\n| boundary_conditions.z_max_bc                                                                         | string  | PEC              | Selections are ","['PEC','PMC', 'PML', 'periodic']","                              |\n| boundary_conditions.pml_settings.pml_kappa                                                           | number  | 2                | A float, or a parameter, or a parameter expression that evaluates to a float |\n| boundary_conditions.pml_settings.pml_sigma                                                           | number  | 5                | A float, or a parameter, or a parameter expression that evaluates to a float |\n| boundary_conditions.pml_settings.pml_layer                                                           | integer | 12               |                                                                              |\n| boundary_conditions.pml_settings.pml_polynomial                                                      | integer | 3                |                                                                              |"),(0,n.kt)("p",null,"| advanced.eme_settings.max_stored_modes                                                               | integer | 1000             |                                                                              |\n| thread_settings.thread                                                                               | integer | 4                |                                                                              |\n| override_default_boundary_conditions                                                                 | boolean | False            |                                                                              |"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("p",null,"The following script adds an EME solver, sets its geometry, mesh, background material, and cell geometry settings, and run solver. This script assumes that the structure and EME ports have been added to the project environment."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu_name = "EME_solver"\nsimu = Project.Simulation()\nsimu.add(name=simu_name, type="EME",\n        property={"background_material": "object_defined_dielectric", "refractive_index": 1,\n                "mesh_settings": {"mesh_factor": 1.2, "mesh_refinement": {"mesh_refinement": "curve_mesh"}},\n                "geometry": {"x_min": 0, "y": 0, "y_span": 4, "z": 0, "z_span": 3},\n                "general": {"wavelength": 1.5, "use_wavelength_sweep": True},\n                "eme_setup": {"cell_geometry": {"energy_conservation": "make_passive", "allow_custom_eigensolver_settings": True,\n                                                "cell_group_definition": [{"span": 2.5, "cell_number": 1, "number_of_modes": 10, "sc": "none"}]}},\n                "transverse_mesh_setting": {"global_mesh_uniform_grid": {"dy": 0.02, "dz": 0.02}}})\nsimu_res = simu[simu_name].run()\n')),(0,n.kt)("h2",{id:"63-fdtd"},"6.3 FDTD"),(0,n.kt)("p",null,"The syntax for adding a finite difference time domain (FDTD) solver to the project and its properties settings are as follows. When adding a FDTD solver, it is assumed that the project has already been added, and the pj is an instance of the project. The ",(0,n.kt)("inlineCode",{parentName:"p"},"add")," function does not return any data."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu = pj.Simulation()\nsimu.add(        \n        name: str,\n        type: "FDTD",\n        property: dict\n    )\n')),(0,n.kt)("h3",{id:"general-2"},"General"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"extra.fdtd_port_group.source_port"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"general.dimension"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"3d"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['2d', '3d']")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"general.using_optical_path_estimate_time"),(0,n.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,n.kt)("td",{parentName:"tr",align:"center"},"False"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"general.simulation_time"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1000"),(0,n.kt)("td",{parentName:"tr",align:"left"})))),(0,n.kt)("h3",{id:"geometry"},"Geometry"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description")))),(0,n.kt)("p",null,"| background_material                                                     | object  | -                 | Select a material object                                                                                       |\n| refractive_index                                                        | number  | 1                | If not selecting a material, the refractive index is required                                                  |"),(0,n.kt)("h3",{id:"mesh-settings"},"Mesh settings"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"mesh_type"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"auto_non_uniform"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['auto_non_uniform', 'uniform']")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"mesh_accuracy.cells_per_wavelength"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"15"),(0,n.kt)("td",{parentName:"tr",align:"left"})))),(0,n.kt)("p",null,"| mesh_step_settings.dx                                     | number  | 0.1              | A float, or a parameter, or a parameter expression that evaluates to a float                                   |\n| mesh_step_settings.dy                                     | number  | 0.1              | A float, or a parameter, or a parameter expression that evaluates to a float                                   |\n|mesh_step_settings.dz                                     | number  | 0.1              | A float, or a parameter, or a parameter expression that evaluates to a float                                   |\n| mesh_refinement.mesh_refinement                           | string  | curve_mesh       | Selections are ","['curve_mesh', 'staircase']","                                                                     |\n| grading.grading                                           | boolean | True             |                                                                                                                |\n| grading.grading_factor                                    | number  | 1.2              | A float, or a parameter, or a parameter expression that evaluates to a float                                   |\n| global_mesh_uniform_grid.dx                               | number  | 0.02             | A float, or a parameter, or a parameter expression that evaluates to a float                                   |\n| global_mesh_uniform_grid.dy                               | number  | 0.02             | A float, or a parameter, or a parameter expression that evaluates to a float                                   |\n| global_mesh_uniform_grid.dz                               | number  | 0.02             | A float, or a parameter, or a parameter expression that evaluates to a float                                   |\n| minimum_mesh_step_settings.min_mesh_step                  | number  | 0.0001           | A float, or a parameter, or a parameter expression that evaluates to a float                                   |\n| mesh_factor                                               | number  | 1.2              | A float, or a parameter, or a parameter expression that evaluates to a float                                   |\n| mesh_grading.grading_factor                               | number  | 1.2              | A float, or a parameter, or a parameter expression that evaluates to a float                                   |"),(0,n.kt)("h3",{id:"boundary-conditions-2"},"Boundary conditions"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"x_min_bc"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"PML"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['PEC', 'PML', 'symmetric', 'anti_symmetric', 'bloch']")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"x_max_bc"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"PML"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['PEC', 'PML', 'bloch']")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"y_min_bc"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"PML"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['PEC', 'PML', 'symmetric', 'anti_symmetric', 'bloch']")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"y_max_bc"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"PML"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['PEC', 'PML', 'bloch']")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"z_min_bc"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"PML"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['PEC', 'PML', 'symmetric', 'anti_symmetric', 'bloch']")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"z_max_bc"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"PML"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['PEC', 'PML', 'bloch']")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"pml_settings.all_pml.layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"8.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD1)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.all_pml.kappa"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD1)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.all_pml.sigma"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.8"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD1)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.all_pml.polynomial"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"3.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD1)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.all_pml.alpha"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD1)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.all_pml.alpha_polynomial"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD1)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.all_pml.min_layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"8.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD1)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.all_pml.max_layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"64.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD1)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.x_max_pml.layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"8.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.x_max_pml.kappa"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.x_max_pml.sigma"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.8"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.x_max_pml.polynomial"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"3.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.x_max_pml.alpha"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.x_max_pml.alpha_polynomial"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.x_max_pml.min_layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"8.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.x_max_pml.max_layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"64.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.x_min_pml.layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"8.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.x_min_pml.kappa"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.x_min_pml.sigma"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.8"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.x_min_pml.polynomial"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"3.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.x_min_pml.alpha"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.x_min_pml.alpha_polynomial"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.x_min_pml.min_layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"8.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.x_min_pml.max_layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"64.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.y_max_pml.layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"8.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.y_max_pml.kappa"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.y_max_pml.sigma"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.8"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.y_max_pml.polynomial"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"3.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.y_max_pml.alpha"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.y_max_pml.alpha_polynomial"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.y_max_pml.min_layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"8.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.y_max_pml.max_layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"64.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.y_min_pml.layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"8.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.y_min_pml.kappa"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.y_min_pml.sigma"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.8"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.y_min_pml.polynomial"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"3.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.y_min_pml.alpha"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.y_min_pml.alpha_polynomial"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.y_min_pml.min_layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"8.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.y_min_pml.max_layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"64.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.z_max_pml.layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"8.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.z_max_pml.kappa"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.z_max_pml.sigma"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.8"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.z_max_pml.polynomial"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"3.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.z_max_pml.alpha"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.z_max_pml.alpha_polynomial"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.z_max_pml.min_layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"8.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.z_max_pml.max_layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"64.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.z_min_pml.layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"8.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.z_min_pml.kappa"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.z_min_pml.sigma"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.8"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.z_min_pml.polynomial"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"3.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.z_min_pml.alpha"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float (property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.z_min_pml.alpha_polynomial"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.z_min_pml.min_layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"8.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.pml_settings.z_min_pml.max_layers"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"64.0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"(property of PMLSettingsForFDTD2)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.bloch_boundary_settings.bloch_units"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"bandstructure"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Selections are ","['bandstructure', 'SI']")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.bloch_boundary_settings.kx"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.bloch_boundary_settings.ky"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"boundary_conditions.bloch_boundary_settings.kz"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"advanced_options.auto_shutoff.use_early_shutoff"),(0,n.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,n.kt)("td",{parentName:"tr",align:"center"},"True"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"advanced_options.auto_shutoff.auto_shutoff_min"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.0001"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"advanced_options.auto_shutoff.down_sample_time"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"100"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"advanced_options.live_slice_filed_display_settings.show_field"),(0,n.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,n.kt)("td",{parentName:"tr",align:"center"},"False"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"advanced_options.live_slice_filed_display_settings.select_field_section"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"x_normal"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"advanced_options.live_slice_filed_display_settings.select_component"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"ex"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"advanced_options.live_slice_filed_display_settings.time_interval"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"200"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"advanced_options.live_slice_filed_display_settings.position"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"thread_setting.thread"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"4"),(0,n.kt)("td",{parentName:"tr",align:"left"})))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("p",null,"The following script adds a FDTD solver, sets its simulation time, background material, geometry, and mesh settings, and run solver. This script assumes the structure, source and monitor have been added to the project environment."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu_name = "FDTD_solver"\nsimu = Project.Simulation()\nsimu.add(name=simu_name, type="FDTD",\n            property={"general": {"simulation_time": 1000},\n                      "background_material": \'object_defined_dielectric\', "refractive_index": 1,\n                      "geometry": {"x": 0, "x_span": 6, "y": 0, "y_span": 3, "z": 0, "z_span": 3 },\n                      "boundary_conditions": {"x_min_bc": "PML", "x_max_bc": "PML", "y_min_bc": "PML", "y_max_bc": "PML", "z_min_bc": "PML", "z_max_bc": "PML",\n                                            "pml_settings": {"all_pml": {"layers": 8, "kappa": 2, "sigma": 0.8, "polynomial": 3, "alpha": 0, "alpha_polynomial": 1}}},\n                      "mesh_settings": {"mesh_factor": 1.2, "mesh_type": "auto_non_uniform",\n                                        "mesh_accuracy": {"cells_per_wavelength": 10},\n                                        "minimum_mesh_step_settings": {"min_mesh_step": 1e-4},\n                                        "mesh_refinement": {"mesh_refinement": "curve_mesh"}}})\nsimu_res = simu[simu_name].run()\n')),(0,n.kt)("h2",{id:"64-fdesweep"},"6.4 FDESweep"),(0,n.kt)("p",null,"The syntax for adding FDESweep solver to the project and its properties settings are as follows. When adding a FDESweep solver, it is assumed that the FDE solver and FDE analysis have already been added, and the pj is an instance of the project. The ",(0,n.kt)("inlineCode",{parentName:"p"},"add")," function does not return any data."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu = pj.Simulation()\nsimu.add(        \n        name: str,\n        type: "FDESweep",\n        property: dict\n    )\n')),(0,n.kt)("h3",{id:"simulation-name"},"Simulation name"),(0,n.kt)("p",null,"| simulation_name               | string  | -          | The specified FDE solver name                                                |"),(0,n.kt)("h3",{id:"sweep-type"},"Sweep type"),(0,n.kt)("p",null,"| sweep_type                    | string  | ranges    |                                                                              |"),(0,n.kt)("h3",{id:"parameters"},"Parameters"),(0,n.kt)("p",null,"| variable       | Any     | -          | A parameter that evaluates to a float                                        |\n| start           | number  | -          | A float, or a parameter, or a parameter expression that evaluates to a float |\n| stop            | number  | -          | A float, or a parameter, or a parameter expression that evaluates to a float |\n| number_of_points | integer | -          |                                                                              |\n| values           | array   |  -         |                                                                              |\n| type             | string  | Number    |                                                                              |"),(0,n.kt)("h3",{id:"result"},"result"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"result"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"component"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:"),"\nThe following script adds a FDESweep solver to obtain the effective refractive index of FDE analysis results, where the sweep range must be set through global parameters. This script assumes that the FDE solver and FDE analysis have been set up. "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu_name = "FDE_Solver"         # The name of FDE solver\nanalysis_name = "FDE_Analysis"   # The name of FDE analysis\nsweep_name = "FDE_Sweep"         # The name of FDE sweep\npara = pj.GlobalParameter()\nwidth = para.add(name="width", expression=0.5, description=\'\')  # The setting of parameter sweep must use global parameters.\nsimu = pj.Simulation()\nsimu.add(name=sweep_name, type="FDESweep",\n             property={"simulation_name": simu_name,\n                       "sweep_type": "ranges", \n                       \'parameters\': [ {\'variable\': width, \'number_of_points\': 3, \'start\': 0.5, \'stop\': 0.6} ],\n                        "result": [{"name": "Neff", "result": analysis_name, "component": "mode0/neff"}]})\nswp_res = simu["FDESweep"].run()\n')),(0,n.kt)("h2",{id:"65-emesweep"},"6.5 EMESweep"),(0,n.kt)("p",null,"The syntax for adding EMESweep solver to the project and its properties settings are as follows. When adding an EMESweep solver, it is assumed that the EME solver and EME analysis have already been added, and the pj is an instance of the project. The ",(0,n.kt)("inlineCode",{parentName:"p"},"add")," function does not return any data."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu = pj.Simulation()\nsimu.add(        \n        name: str,\n        type: "EMESweep",\n        property: dict\n    )\n')),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"simulation_name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"The specified EME solver name")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"sweep_type"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"ranges"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"parameters.","[variable]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Any"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A parameter that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"parameters.","[start]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"parameters.","[stop]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"parameters.","[number_of_points]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"parameters.","[values]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"array"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"parameters.","[type]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"result.","[name]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"result.","[result]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"result.","[component]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"EME Sweep"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"type_name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"EMESweep"),(0,n.kt)("td",{parentName:"tr",align:"left"})))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("p",null,"The following script adds an EMESweep solver to obtain the S-Matrix of EME analysis results, where the sweep range must be set through global parameters. This script assumes that the EME solver and EME analysis have been set up. "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu_name = "EME_Solver"         # The name of EME solver\nanalysis_name = "EME_Analysis"   # The name of EME analysis\nsweep_name = "EME_Sweep"         # The name of EME sweep\npara = pj.GlobalParameter()\ngap = para.add(name="gap", expression=0.45, description=\'\')  # The setting of parameter sweep must use global parameters.\nsimu = pj.Simulation()\nsimu.add(name=sweep_name, type="EMESweep", \n            property={"simulation_name": simu_name,\n                    "sweep_type": "values", \n                    "parameters": [{"variable": gap, "values": [0.45, 0.55, 0.65]}],\n                    "result": [{"name": "SMatrix", "component": "S", "result": "S-Matrix"}]})\nswp_res = simu["EMESweep"].run()\n\n')),(0,n.kt)("h2",{id:"66-fdtdsweep"},"6.6 FDTDSweep"),(0,n.kt)("p",null,"The syntax for adding FDTDSweep solver to the project and its properties settings are as follows. When adding a FDTDSweep solver, it is assumed that global parameters, FDTD solver, source and monitor/analysis have already been added, and the pj is an instance of the project. The ",(0,n.kt)("inlineCode",{parentName:"p"},"add")," function does not return any data."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu = pj.Simulation()\nsimu.add(        \n        name: str,\n        type: "FDTDSweep",\n        property: dict\n    )\n')),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"title"),(0,n.kt)("th",{parentName:"tr",align:"left"},"type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"simulation_name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"The specified FDTD solver name")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"sweep_type"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"ranges"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"parameters.","[variable]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Any"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A parameter that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"parameters.","[start]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"parameters.","[stop]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"number"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A float, or a parameter, or a parameter expression that evaluates to a float")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"parameters.","[number_of_points]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"parameters.","[values]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"array"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"parameters.","[type]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"result.","[name]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"result.","[result]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"result.","[component]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"FDTD Sweep"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"type_name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"FDTDSweep"),(0,n.kt)("td",{parentName:"tr",align:"left"})))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("p",null,"The following script adds a FDTDSweep solver to obtain the results of the power monitor and the mode expansion analysis, where the sweep range must be set through global parameters. This script assumes that the FDTD solver and Mode Expansion analysis have been set up. "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu_name = "FDTD_Solver"        # The name of FDTD solver\nmonitor_name = "Power_Monitor"   # The name of power monitor \nanalysis_name = "ModeExpansion"  # The name of mode expansion analysis\nsweep_name = "FDTD_Sweep"        # The name of sweep name\nres1 = "T"                       # The name of the sweep result\nres2 = "T_forward"               # The name of the sweep result\npara = pj.GlobalParameter()\ngap = para.add(name="gap", expression=0.5, description=\'\')  # The setting of parameter sweep must use global parameters.\nsimu = pj.Simulation()\nsimu.add(name=sweep_name, type="FDTDsweep", property={\n            "simulation_name": simu_name, \n            "parameters": [{"variable": gap, "number_of_points": 3, "start": 0.5, "stop": 0.6 }],\n                           "result": [{"name": res1, "result": monitor_name, "component": "T"},\n                                      {"name": res2, "result": analysis_name, "component": "T_forward"}]})\nswp_res = simu["FDTDSweep"].run()\n')),(0,n.kt)("h2",{id:"67-fdtdsmatrix"},"6.7 FDTDSmatrix"),(0,n.kt)("p",null,"The syntax for adding FDTDSmatrix solver to the project and its properties settings are as follows. When adding a FDTDSmatrix solver, it is assumed that FDTD solver and FDTD port have already been added, and the pj is an instance of the project. The ",(0,n.kt)("inlineCode",{parentName:"p"},"add")," function does not return any data."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu = pj.Simulation()\nsimu.add(        \n        name: str,\n        type: "FDTDSmatrix",\n        property: dict\n    )\n')),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"simulation_name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"},"The specified FDTD solver name")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"s_matrix_setup.","[port_id]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"s_matrix_setup.","[index]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"s_matrix_setup.","[port]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"s_matrix_setup.","[active]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"FDTD SMatrix"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"type_name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"string"),(0,n.kt)("td",{parentName:"tr",align:"left"},"FDTDSMatrix"),(0,n.kt)("td",{parentName:"tr",align:"left"})))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("p",null,'The following script add an FDTDSmatrix solver to obtain the S matrix of the FDTD port, and enable the calculated port through "active".'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu_name = "FDTD_solver"     # the name of FDTD solver\nsweep_name = "matrix_sweep"   # the name of FDTD Smatrix sweep\nport1_name = "port1"          # the name of port1\nport2_name = "port2"          # the name of port2\nsimu = pj.Simulation()\nsmatrix_res = simu.add(name=sweep_name, type="FDTDSmatrix",\n                            property={"simulation_name": simu_name,\n                                        "s_matrix_setup": [{"port": port1_name, "active": True},\n                                                        {"port": port2_name, "active": True}]})\n\n\n\n\n')),(0,n.kt)("h2",{id:"65-oedevice"},"6.5 OEDevice"),(0,n.kt)("p",null,"Incorporate an OEDevice(Optic Eletrical Devices) solver into the current project using the code ",(0,n.kt)("inlineCode",{parentName:"p"},"type='OEDevice'"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'add(\n            self,\n            *,\n            name: str,\n            type: Literal["OEDevice"],\n            property: OeDevicePostProcess,\n    )\n')),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu = pj.Simulation()\nsimu.add(name="preview_fdtd", type="AFDTD", property={\n    "mesh_settings": {"mesh_accuracy": {"cells_per_wavelength": cells_per_wavelength}}})\nsimu.add(name="preview_oedevice", type="OEDevice", property={\n    "geometry": {"dimension": "2d_x_normal", "x": oe_x_mean, "x_span": 0, "y": oe_y_mean, "y_span": oe_y_span, "z_min": oe_z_min, "z_max": oe_z_max},\n    "genrate": {"genrate_path": "", "coordinate_unit": "m", "field_length_unit": "m", "source_fraction": source_fraction},\n    "general": {"norm_length": normal_length, "solver_mode": "steady_state", "simulation_temperature": temperature},\n    "advanced": {"non_linear_solver": "Newton", "linear_solver": "MUMPS", "max_iterations": 50}})\n')),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"Parameters"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Notes"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general.simulation_region"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Device_Region"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Selections are ","['Device_Region']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general.norm_length"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Specifies a length to represent the un-simulated dimension for 2D simulations.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general.solver_mode"),(0,n.kt)("td",{parentName:"tr",align:"center"},"steady_state"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"To set the simulation mode. Selections are ","['steady_state', 'transient', 'SSAC']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general.temperature_dependence"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Isothermal"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"To set the type of temperature dependence.  Selection only is ","['Isothermal']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general.simulation_temperature"),(0,n.kt)("td",{parentName:"tr",align:"center"},"300"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"To set the simulation temperature.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced.non_linear_solver"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Newton"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the iteration method of Netwon to solve the entire non-linear algebraic system. Selection is ","['Newton']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced.linear_solver"),(0,n.kt)("td",{parentName:"tr",align:"center"},"MUMPS"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Selections are ","['MUMPS', ' LU', ' BCGS']",". 'MUMPS' and 'LU' are direct linear solvers which usually give the exact solution. However, 'MUMPS' supports parallel computation while LU doesn't. \uff1b'BCGS' is a Krylov subspace (KSP) iterative solver, which also supports parallel computation and is more efficient but can only give approximate results.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced.use_quasi_fermi"),(0,n.kt)("td",{parentName:"tr",align:"center"},"disabled"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Whether to directly solve for the quasi-Fermi potential instead of carrier concentration as unkowns. Selections are ","['disabled', ' enabled']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced.damping"),(0,n.kt)("td",{parentName:"tr",align:"center"},"none"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the nonlinear update damping scheme. Selections are ","['none', ' potential']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced.potential_update"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the threshold potential for potential damping. The large value will reduce the strength of damping effect")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced.multi_threads"),(0,n.kt)("td",{parentName:"tr",align:"center"},"let_solver_choose"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Selections are ","['let_solver_choose', 'set_thread_count']",". When it's set to 'let_solver_choose', the solver will determine the number of threads to use. The default maximum number of threads is 4. When it's set to 'set_thread_count', the number of threads is set by the user to 'thread_count'.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced.thread_count"),(0,n.kt)("td",{parentName:"tr",align:"center"},"4"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Custom number of threads.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced.max_iterations"),(0,n.kt)("td",{parentName:"tr",align:"center"},"30"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set global maximum number of iterations, available when 'use_global_max_iterations' is True.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced.use_global_max_iterations"),(0,n.kt)("td",{parentName:"tr",align:"center"},"false"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Selections are ","['false', 'true']",".Whether to use global max iterations during the initialization of solving the Poisson equations and the subsequent computing for solving the drift-diffusion equations coupling with Poisson equations, default to be 'True'.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced.poisson_max_iterations"),(0,n.kt)("td",{parentName:"tr",align:"center"},"30"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the max iterations during the initialization of solving the Poisson equations, available when 'use_global_max_iterations' is 'False'.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced.ddm_max_iterations"),(0,n.kt)("td",{parentName:"tr",align:"center"},"30"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the max iterations during the subsequent computing for solving the drift-diffusion equations coupling with Poisson equations, available when 'use_global_max_iterations' is 'False'.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced.relative_tolerance"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0e-5"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the relative update tolerance.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced.tolerance_relax"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0e+5"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the tolerance relaxation factor for convergence on relative tolerance criteria.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced.divergence_factor"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0e+25"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Nonlinear solver fault with divergence when each individual function norm exceeds the threshold as its absolute tolerance multiply by this factor.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"genrate.genrate_path"),(0,n.kt)("td",{parentName:"tr",align:"center"}),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the absolute path of the optical generation rate file (gfile)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"genrate.source_fraction"),(0,n.kt)("td",{parentName:"tr",align:"center"}),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the scaling factor for the light power. The imported optical generation rate will be multiplied by this factor first, and then be used to solve the carrier transport.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"genrate.coordinate_unit"),(0,n.kt)("td",{parentName:"tr",align:"center"},"m"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the coordinate unit in the gfile.  Selections are ","['m', 'cm', 'um', 'nm']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"genrate.field_length_unit"),(0,n.kt)("td",{parentName:"tr",align:"center"},"m"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Selections are ","['m', 'cm', 'um', 'nm']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.dimension"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2d_x_normal"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Selections are ","['2d_x_normal', '2d_y_normal', '2d_z_normal']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.x"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The x-coordinate of the center point position of the OEDevice.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.x_span"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The length in x direction of the OEDevice. Restrained by condition: >0.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.x_min"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The minimum x-coordinate endpoint data of the OEDevice.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.x_max"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The maximum x-coordinate endpoint data of the OEDevice.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.y"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The y-coordinate of the center point position of the OEDevice.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.y_span"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The width in y direction of the OEDevice. Restrained by condition: >0.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.y_min"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The minimum y-coordinate endpoint data of the OEDevice.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.y_max"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The maximum y-coordinate endpoint data of the OEDevice.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.z"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The z-coordinate of the center point position of the OEDevice.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.z_span"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The height in z direction of the OEDevice. Restrained by condition: >0.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.z_min"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The z-coordinate of the bottom position of the height of the OEDevice.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.z_max"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The z-coordinate of the top position of the height of the OEDevice.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"small_signal_ac.perturbation_amplitude"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.001"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the voltage amplitude of the small signal.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"small_signal_ac.frequency_spacing"),(0,n.kt)("td",{parentName:"tr",align:"center"},"single"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the spacing type of the frequency. Selections are ","['single', 'linear', 'log']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"small_signal_ac.frequency"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0e+6"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the value of the single frequency.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"small_signal_ac.start_frequency"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0e+06"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the start frequency of linear spacing.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"small_signal_ac.stop_frequency"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0e+09"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the stop frequency of linear spacing.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"small_signal_ac.frequency_interval"),(0,n.kt)("td",{parentName:"tr",align:"center"},"9.9999e+10"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the frequency interval of linear spacing.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"small_signal_ac.num_frequency_points"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the number of frequency points of linear spacing.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"small_signal_ac.log_start_frequency"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0e+06"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the start frequency of logarithmic spacing.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"small_signal_ac.log_stop_frequency"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0e+10"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the stop frequency of logarithmic spacing.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"small_signal_ac.log_num_frequency_points"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the number of frequency points of logarithmic spacing.")))),(0,n.kt)("h2",{id:"66-afdtd"},"6.6 AFDTD"),(0,n.kt)("p",null,"Incorporate an AFDTD(Active Finite-Difference Time-Domain) solver into the current project using the code ",(0,n.kt)("inlineCode",{parentName:"p"},"type='AFDTD'"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'add(\n            self,\n            *,\n            name: str,\n            type: Literal["AFDTD"],\n            property: FdtdPostProcess,\n    )\n')),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu = pj.Simulation()\nsimu.add(name="preview_fdtd", type="AFDTD", property={\n    "mesh_settings": {"mesh_accuracy": {"cells_per_wavelength": cells_per_wavelength}}})\n')),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"Parameters"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Notes"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"extra.fdtd_port_group.source_port"),(0,n.kt)("td",{parentName:"tr",align:"center"}),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"To extra data of source port from the result of FDTD simulation.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general.dimension"),(0,n.kt)("td",{parentName:"tr",align:"center"},"3d"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Selections are ","['3d']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general.using_optical_path_estimate_time"),(0,n.kt)("td",{parentName:"tr",align:"center"},"false"),(0,n.kt)("td",{parentName:"tr",align:"center"},"bool"),(0,n.kt)("td",{parentName:"tr",align:"center"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general.simulation_time"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1000"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"To set the simulation time for transient simulation.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"mesh_settings.mesh_type"),(0,n.kt)("td",{parentName:"tr",align:"center"},"auto_non_uniform"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Selections are ","['auto_non_uniform', 'uniform']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"mesh_settings.mesh_accuracy.cells_per_wavelength"),(0,n.kt)("td",{parentName:"tr",align:"center"},"15"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the mesh accuracy for region of FDTD simulation.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"mesh_settings.mesh_step_settings.dx"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.1"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the  miniimum of spacing between mesh step centers in x direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"mesh_settings.mesh_step_settings.dy"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.1"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the  miniimum of spacing between mesh step centers in y direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"mesh_settings.mesh_step_settings.dz"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.1"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the  miniimum of spacing between mesh step centers in z direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"mesh_settings.minimum_mesh_step_settings.min_mesh_step"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.0001"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the minimum vale of  mesh step.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced_options.auto_shutoff.use_early_shutoff"),(0,n.kt)("td",{parentName:"tr",align:"center"},"true"),(0,n.kt)("td",{parentName:"tr",align:"center"},"bool"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Decide whether to use early shutoff.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced_options.auto_shutoff.auto_shutoff_min"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0e-4"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Control the simulation shutoff based on the ratio of energy to the maximum input energy.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced_options.auto_shutoff.down_sample_time"),(0,n.kt)("td",{parentName:"tr",align:"center"},"100"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Inspect the auto shutoff conditions every down sample time.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced_options.live_slice_filed_display_settings.show_field"),(0,n.kt)("td",{parentName:"tr",align:"center"},"false"),(0,n.kt)("td",{parentName:"tr",align:"center"},"bool"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Decide whether to gennerate the electric intensity filed image for the results.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced_options.live_slice_filed_display_settings.select_field_section"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2d_z_normal"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Selections are ","['2d_y_normal', '2d_z_normal']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced_options.live_slice_filed_display_settings.select_component"),(0,n.kt)("td",{parentName:"tr",align:"center"},"ex"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Selections are ","['ex', 'ey', 'ez']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced_options.live_slice_filed_display_settings.time_interval"),(0,n.kt)("td",{parentName:"tr",align:"center"},"200"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the time interval for displaying image.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"advanced_options.live_slice_filed_display_settings.position"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the center position of the field image.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"thread_setting.thread"),(0,n.kt)("td",{parentName:"tr",align:"center"},"4"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Determine the number of cores required to run the simulation on the local computer.")))),(0,n.kt)("h2",{id:"67-afde"},"6.7 AFDE"),(0,n.kt)("p",null,"Integrate an AFDE(Active Finite Difference Eigenmode) solver into the current project using the code ",(0,n.kt)("inlineCode",{parentName:"p"},"type='AFDE'"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'add(\n            self,\n            *,\n            name: str,\n            type: Literal["AFDE"],\n            property: AfdePostProcess,\n    )\n')),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'simu = pj.Simulation()\nsimu.add(name="preview_fde", type="AFDE", property={\n    "mesh_settings": {"global_mesh_uniform_grid": {"dy": ogrid_global_y, "dz": ogrid_global_z}},\n    "fde_analysis": {"modal_analysis": {"calculate_modes": False, "mesh_structure": False, "wavelength": wavelength},\n                     "modulator_analysis": {"modulator_analysis": True, "wavelength": wavelength, "np_path": ""}},\n    "other": {**Si_index_vs_doping}})\n')),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"Parameters"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Notes"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general.solver_type"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2d_x_normal"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Selections are ","['2d_x_normal', '2d_y_normal', '2d_z_normal', 'x', 'y', 'z']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"mesh_settings.global_mesh_uniform_grid.dx"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.02"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The global mesh step in the x direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"mesh_settings.global_mesh_uniform_grid.dy"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.02"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The global mesh step in the y direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"mesh_settings.global_mesh_uniform_grid.dz"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.02"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The global mesh step in the z direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"mesh_settings.minimum_mesh_step_settings.min_mesh_step"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.0001"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the minimum vale of  mesh step.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"thread_setting.thread"),(0,n.kt)("td",{parentName:"tr",align:"center"},"4"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Determine the number of cores required to run the simulation on the local computer.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.mesh_structure"),(0,n.kt)("td",{parentName:"tr",align:"center"},"false"),(0,n.kt)("td",{parentName:"tr",align:"center"},"bool"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Confirm whether to generate a refractive index diagram for the structure.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.calculate_modes"),(0,n.kt)("td",{parentName:"tr",align:"center"},"false"),(0,n.kt)("td",{parentName:"tr",align:"center"},"bool"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Determine whether to calculate the modes.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.[]far_field_settings.calculate"),(0,n.kt)("td",{parentName:"tr",align:"center"},"true"),(0,n.kt)("td",{parentName:"tr",align:"center"},"bool"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Determine whether to calculate the far field.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.[]far_field_settings.mode_selection"),(0,n.kt)("td",{parentName:"tr",align:"center"}),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Select the mode for which far-field calculation is needed.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.[]far_field_settings.projection_method"),(0,n.kt)("td",{parentName:"tr",align:"center"},"planar"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Selections are ","['planar']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.[]far_field_settings.farfield_filter"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Configure this parameter to filter near field data for eliminating high frequency ripples in the results. Its value ranging from 0 to 1.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.[]far_field_settings.material_index"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.4"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the material refractive index for projection.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.[]far_field_settings.projection_distance"),(0,n.kt)("td",{parentName:"tr",align:"center"},"4430.65"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The distance for far-field projection calculation.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.[]far_field_settings.points_in_x"),(0,n.kt)("td",{parentName:"tr",align:"center"},"50"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"In x direction, the number of points in the far field.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.[]far_field_settings.points_in_y"),(0,n.kt)("td",{parentName:"tr",align:"center"},"50"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"In y direction, the number of points in the far field.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.[]far_field_settings.farfield_x"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"In x direction, the position of far field center point.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.[]far_field_settings.farfield_x_span"),(0,n.kt)("td",{parentName:"tr",align:"center"},"26.1834"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"In x direction, the span of far field range.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.[]far_field_settings.farfield_y"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"In y direction, the position of far field center point.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.[]far_field_settings.farfield_y_span"),(0,n.kt)("td",{parentName:"tr",align:"center"},"18.1231"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"In y direction, the span of far field range.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.wavelength"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.55"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The mode wavelength for FDE calculation.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.wavelength_offset"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.002"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The mode wavelength offset for FDE calculation.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.number_of_trial_modes"),(0,n.kt)("td",{parentName:"tr",align:"center"},"5"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"When calculating modes, determine the calculated number of modes around the refractive index.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.search"),(0,n.kt)("td",{parentName:"tr",align:"center"},"max_index"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Calculate the mode based on the maximum refractive index or user defined refractive index in the structure. Selections are ","['near_n', 'max_index']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.n"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Under the 'near_n' condition, use this value of refractive index to search the source mode.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.calculate_group_index"),(0,n.kt)("td",{parentName:"tr",align:"center"},"false"),(0,n.kt)("td",{parentName:"tr",align:"center"},"bool"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Determine whether to calculate the group refractive index.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.bent_waveguide.bent_waveguide"),(0,n.kt)("td",{parentName:"tr",align:"center"},"false"),(0,n.kt)("td",{parentName:"tr",align:"center"},"bool"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Select whether to calculate modes in bent waveguides.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.bent_waveguide.radius"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.0"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the waveguide radius for bent waveguides.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.bent_waveguide.orientation"),(0,n.kt)("td",{parentName:"tr",align:"center"},"0.0"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The bent direction of the waveguide.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.bent_waveguide.location"),(0,n.kt)("td",{parentName:"tr",align:"center"},"simulation_center"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the bent center position of bent waveguides. Selections are ","['simulation_center']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.modal_analysis.mode_removal.threshold"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Screen the FDTD port source according to the energy arriving at the boundary to ensure the accuracy of the calculated transmission FDTD port mode.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.frequency_analysis.frequency_analysis"),(0,n.kt)("td",{parentName:"tr",align:"center"},"false"),(0,n.kt)("td",{parentName:"tr",align:"center"},"bool"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Determine whether to invoke frequency analysis.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.frequency_analysis.start_wavelength"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the start frequency of the frequency analysis.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.frequency_analysis.stop_wavelength"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the stop frequency of the frequency analysis.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.frequency_analysis.number_of_points"),(0,n.kt)("td",{parentName:"tr",align:"center"},"10"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the number of points in the frequency analysis")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.frequency_analysis.effective_index"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.0"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"To search the mode near this refractive index.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"fde_analysis.frequency_analysis.detailed_dispersion_calculation"),(0,n.kt)("td",{parentName:"tr",align:"center"},"false"),(0,n.kt)("td",{parentName:"tr",align:"center"},"bool"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Determine whether to calculate the dispersion of structure.")))))),(0,n.kt)("p",null,"The code provided in this section can be utilized to incorporate  boundary and mesh into the current project."),(0,n.kt)("h2",{id:"31-boundary"},"3.1 Boundary"),(0,n.kt)("p",null,"The following content comprises code explanations and specific examples of boundary conditions in optical simulation."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"OBoundary(\n            self,\n            *,\n            pml_same_settings: bool = True,\n            property: Union['OBoundarySameSettingsPostProcess', 'OBoundaryNotSameSettingsPostProcess'],\n    )\n")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"Parameters"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"property"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The default property of the optical boundary.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"pml_same_settings"),(0,n.kt)("td",{parentName:"tr",align:"center"},"To decide whether using the same pml settings on every directions or not.")))),(0,n.kt)("p",null,"As demonstrated in the following examples, we also provide support for customizing boundary conditions in different directions. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'st.OBoundary(property={"geometry": {"x": 0, "x_span": 2*(l_input+l_bend+l_beam/2-0.5), "y": 0, "y_span": 6, "z": 0.11, "z_span": monitor_h},\n                        "boundary": {"x_min": "PML", "x_max": "PML", "y_min": "PML", "y_max": "PML", "z_min": "PML", "z_max": "PML"},\n                        "general_pml": {"pml_same_settings": True, "pml_kappa": 2, "pml_sigma": 0.8, "pml_layer": 8, "pml_polynomial": 3}})\n \n')),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"Parameters"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Notes"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.pml_same_settings"),(0,n.kt)("td",{parentName:"tr",align:"center"},"true"),(0,n.kt)("td",{parentName:"tr",align:"center"},"bool"),(0,n.kt)("td",{parentName:"tr",align:"center"},"To decide whether using the same pml settings on every directions or not.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.pml_profile"),(0,n.kt)("td",{parentName:"tr",align:"center"},"standard"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"To provide the options of PML profile.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.pml_layer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the number of layers after discretizing the PML region.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.pml_kappa"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the kappa parameter related to the absorption characteristics of the PML region.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.pml_sigma"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the sigma parameter related to the absorption characteristics of the PML region.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.pml_polynomial"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the order of the kappa and the sigma parameters.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.pml_alpha"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the alpha parameter related to the absorption characteristics of the PML region.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.pml_alpha_polynomial"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the order of the alpha parameter.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.pml_min_layers"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the minimum number of layers within a reasonable range for the PML layers.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.pml_max_layers"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set themaximum number of layers within a reasonable range for the PML layers.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.x"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The x-coordinate of the center point position of the boundary.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.x_span"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The length in x direction of the boundary. Restrained by condition: >0.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.x_min"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The minimum x-coordinate endpoint data of the boundary.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.x_max"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The maximum x-coordinate endpoint data of the boundary.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.y"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The y-coordinate of the center point position of the boundary.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.y_span"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The width in y direction of the boundary. Restrained by condition: >0.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.y_min"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The minimum y-coordinate endpoint data of the boundary.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.y_max"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The maximum y-coordinate endpoint data of the boundary.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.z"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The z-coordinate of the center point position of the boundary.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.z_span"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The thinckness in z direction of the boundary. Restrained by condition: >0.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.z_min"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The z-coordinate of the bottom position of the thickness of the boundary.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"geometry.z_max"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"The z-coordinate of the top position of the thickness of the boundary.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"boundary.x_max"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the boundary type in the x+ direction. Selections are ","['PML', 'PEC', 'metal', 'PMC', 'periodic']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"boundary.x_min"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the boundary type in the x- direction. Selections are ","['PML', 'PEC', 'metal', 'PMC', 'symmetric', 'anti_symmetric', 'periodic']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"boundary.y_max"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the boundary type in the y+ direction. Selections are ","['PML', 'PEC', 'metal', 'PMC', 'periodic']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"boundary.y_min"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the boundary type in the y- direction. Selections are ","['PML', 'PEC', 'metal', 'PMC', 'symmetric', 'anti_symmetric', 'periodic']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"boundary.z_max"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the boundary type in the z+ direction. Selections are ","['PML', 'PEC', 'metal', 'PMC', 'periodic']",".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"boundary.z_min"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the boundary type in the z- direction. Selections are ","['PML', 'PEC', 'metal', 'PMC', 'symmetric', 'anti_symmetric', 'periodic']",".")))),(0,n.kt)("p",null,"If you need to customize the boundary conditions for simulation requirements, you can also refer to the table below for modifying boundary conditions in different directions.Taking the x coordinate axis as an example, the parameters invocation is the same for the y/z coordinates."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"Parameters"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Notes"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.pml_same_settings"),(0,n.kt)("td",{parentName:"tr",align:"center"},"true"),(0,n.kt)("td",{parentName:"tr",align:"center"},"bool"),(0,n.kt)("td",{parentName:"tr",align:"center"},"To decide whether using the same pml settings on every directions or not.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_min_bc.pml_profile"),(0,n.kt)("td",{parentName:"tr",align:"center"},"standard"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"To provide the options of PML profile in x- direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_min_bc.pml_layer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the number of layers after discretizing the PML region in x- direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_min_bc.pml_kappa"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the kappa parameter related to the absorption characteristics of the PML region in x- direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_min_bc.pml_sigma"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the sigma parameter related to the absorption characteristics of the PML region in x- direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_min_bc.pml_polynomial"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the order of the kappa and the sigma parameters in x- direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_min_bc.pml_alpha"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the alpha parameter related to the absorption characteristics of the PML region in x- direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_min_bc.pml_alpha_polynomial"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the order of the alpha parameter in x- direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_min_bc.pml_min_layers"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the minimum number of layers within a reasonable range for the PML layers in x- direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_min_bc.pml_max_layers"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the maximum number of layers within a reasonable range for the PML layers in x- direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_max_bc.pml_profile"),(0,n.kt)("td",{parentName:"tr",align:"center"},"standard"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"center"},"To provide the options of PML profile in x+ direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_max_bc.pml_layer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the number of layers after discretizing the PML region in x+ direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_max_bc.pml_kappa"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the kappa parameter related to the absorption characteristics of the PML region in x+ direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_max_bc.pml_sigma"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the sigma parameter related to the absorption characteristics of the PML region in x+ direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_max_bc.pml_polynomial"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the order of the kappa and the sigma parameters in x+ direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_max_bc.pml_alpha"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"float"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the alpha parameter related to the absorption characteristics of the PML region in x+ direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_max_bc.pml_alpha_polynomial"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the order of the alpha parameter in x+ direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_max_bc.pml_min_layers"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the minimum number of layers within a reasonable range for the PML layers in x+ direction.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"general_pml.x_max_bc.pml_max_layers"),(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Set the maximum number of layers within a reasonable range for the PML layers in x+ direction.")))))}g.isMDXComponent=!0}}]);